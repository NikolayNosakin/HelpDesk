
// Выполняет добавление работы в отчет
Процедура ДобавитьВОтчетКлиент(
	ДатаОтчета, 
	ВключенХронометраж, 
	ДатаНачалаХронометража, 
	ДатаКонцаХронометража, 
	ВидыРабот, 
	Объект, 
	СпособУказанияВремени,
	ЭлементПереключитьХронометраж, 
	Выполнена,Описание = "") Экспорт
	
	НуженДиалог = Ложь;
	ПараметрыОповещения = Неопределено;
	
	Если ВключенХронометраж Тогда // сейчас будем выключать хронометраж и делать запись отчета
		Если ДатаНачалаХронометража <> '00010101' Тогда
			СегодняшнийДень = НачалоДня(ТекущаяДата());
			ДеньНачала = НачалоДня(ДатаНачалаХронометража);
			
			Если ДеньНачала <> СегодняшнийДень Тогда
				НуженДиалог = Истина;
			КонецЕсли;
		Иначе
			
		КонецЕсли;
		
		Если ВидыРабот.Количество() <> 1 Тогда
			НуженДиалог = Истина;
		КонецЕсли;
	Иначе
		НуженДиалог = Истина;
	КонецЕсли;
	
	Если НуженДиалог = Ложь Тогда
		
		ВидРаботы = ВидыРабот[0].Значение;
		
		КонецХронометража = ТекущаяДата();
		ДлительностьРаботы = КонецХронометража - ДатаНачалаХронометража;
		
		ПараметрыОтчета = Новый Структура();
		ПараметрыОтчета.Вставить("ДатаОтчета", ДатаОтчета);
		ПараметрыОтчета.Вставить("ВидРаботы", ВидРаботы);
		ПараметрыОтчета.Вставить("ОписаниеРаботы", ?(ЗначениеЗаполнено(Описание),Описание,Строка(Объект)));
		ПараметрыОтчета.Вставить("ДлительностьРаботы", ДлительностьРаботы);
		ПараметрыОтчета.Вставить("НачалоРаботы", ДатаНачалаХронометража);
		ПараметрыОтчета.Вставить("ОкончаниеРаботы", КонецХронометража);
		ПараметрыОтчета.Вставить("Объект", Объект);
		
		УчетВремени.ДобавитьВОтчет(ПараметрыОтчета, ПараметрыОповещения);
		
		ВключенХронометраж = Ложь;
		ЭлементПереключитьХронометраж.Пометка = Ложь;
		
	Иначе
		
		ДлительностьРаботы = 0;
		Если Не ВключенХронометраж И ДатаНачалаХронометража <> '00010101' Тогда
			СегодняшнийДень = НачалоДня(ТекущаяДата());
			ДеньНачала = НачалоДня(ДатаНачалаХронометража);
			
			Если ДеньНачала = СегодняшнийДень Тогда
				КонецХронометража = ТекущаяДата();
				ДлительностьРаботы = КонецХронометража - ДатаНачалаХронометража;
			КонецЕсли;
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("ДатаОтчета", ДатаОтчета);
		ПараметрыФормы.Вставить("ВидыРабот", ВидыРабот);
		ПараметрыФормы.Вставить("ОписаниеРаботы", ?(ЗначениеЗаполнено(Описание),Описание,Строка(Объект)));
		ПараметрыФормы.Вставить("ДлительностьРаботы", ДлительностьРаботы);
		ПараметрыФормы.Вставить("НачалоРаботы", ДатаНачалаХронометража);
		ПараметрыФормы.Вставить("ОкончаниеРаботы", КонецХронометража);
		ПараметрыФормы.Вставить("Объект", Объект);
		ПараметрыФормы.Вставить("СпособУказанияВремени", СпособУказанияВремени);
		
		ПараметрыОтчета = ОткрытьФормуМодально("РегистрСведений.ФактическиеТрудозатраты.Форма.ФормаДобавленияРаботы", ПараметрыФормы);
				
		Если ПараметрыОтчета <> Неопределено Тогда
			
			УчетВремени.ДобавитьВОтчет(ПараметрыОтчета, ПараметрыОповещения);
			ВключенХронометраж = Ложь;
			ЭлементПереключитьХронометраж.Пометка = Ложь;
			
		КонецЕсли; 
		
	КонецЕсли;
	
	Если ПараметрыОповещения <> Неопределено Тогда
		ПоказатьОповещение(ПараметрыОповещения, ВключенХронометраж, Объект);
	КонецЕсли;
	
КонецПроцедуры	

// Возвращает Истина, если нужен диалог для ввода параметров работы
Функция НуженДиалогДляХронометража(ВключенХронометраж, ДатаНачалаХронометража, ВидыРабот) Экспорт
	
	НуженДиалог = Ложь;
	
	Если ВключенХронометраж Тогда // сейчас будем выключать хронометраж и делать запись отчета
		Если ДатаНачалаХронометража <> '00010101000000' Тогда
			СегодняшнийДень = НачалоДня(ТекущаяДата());
			ДеньНачала = НачалоДня(ДатаНачалаХронометража);
			
			Если ДеньНачала <> СегодняшнийДень Тогда
				НуженДиалог = Истина;
			КонецЕсли;
		Иначе
			
		КонецЕсли;
		
		Если ВидыРабот.Количество() <> 1 Тогда
			НуженДиалог = Истина;
		КонецЕсли;
	КонецЕсли;

	Возврат НуженДиалог;
	
КонецФункции	

// Показать оповещение после записи в отчет
Процедура ПоказатьОповещение(ПараметрыОповещения, ВключенХронометраж, Объект) Экспорт
	
	// покажем оповещение
	Если ПараметрыОповещения <> Неопределено Тогда 
	
		Если ПараметрыОповещения.Свойство("КлючЗаписи") Тогда
			ТекстОповещения = НСтр("ru = 'Создание:'");
			НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(ПараметрыОповещения.КлючЗаписи);
			ПоказатьОповещениеПользователя(ТекстОповещения, НавигационнаяСсылка, ПараметрыОповещения.Представление, БиблиотекаКартинок.Информация32);
		КонецЕсли;
		
		Если ПараметрыОповещения.Свойство("СсылкаНаОтчет") Тогда
			ТекстОповещения = "";
			Если ПараметрыОповещения.СозданОтчет Тогда
				ТекстОповещения = НСтр("ru = 'Создание:'");
			Иначе
				ТекстОповещения = НСтр("ru = 'Изменение:'");
			КонецЕсли;			
			НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(ПараметрыОповещения.СсылкаНаОтчет);
			ПоказатьОповещениеПользователя(ТекстОповещения, НавигационнаяСсылка, ПараметрыОповещения.ПредставлениеСсылки, БиблиотекаКартинок.Информация32);
		КонецЕсли;	
		
		ПараметрОповещения = Неопределено;
		Если ПараметрыОповещения.Свойство("Изменение_ФактическиеТрудозатратыЗадачи", ПараметрОповещения) Тогда
			Оповестить("Изменение_ФактическиеТрудозатратыЗадачи", ПараметрОповещения);
		КонецЕсли;	
		
		ПараметрОповещения = Неопределено;
		Если ПараметрыОповещения.Свойство("Изменение_ФактическиеТрудозатратыПроектнойЗадачи", ПараметрОповещения) Тогда
			Оповестить("Изменение_ФактическиеТрудозатратыПроектнойЗадачи", ПараметрОповещения);
		КонецЕсли;
		
	ИначеЕсли ВключенХронометраж Тогда
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Включен хронометраж по ""%1""'"), Строка(Объект));
		Состояние(Текст);
		
	КонецЕсли;	
	
КонецПроцедуры

// Вычисляет ДлительностьРаботы 
Функция ПолучитьДлительностьРаботы(ДатаНачалаХронометража) Экспорт
	
	ДлительностьРаботы = 0;
	
	Если ДатаНачалаХронометража <> '00010101' Тогда
		СегодняшнийДень = НачалоДня(ТекущаяДата());
		ДеньНачала = НачалоДня(ДатаНачалаХронометража);
		
		Если ДеньНачала = СегодняшнийДень Тогда
			КонецХронометража = ТекущаяДата();
			ДлительностьРаботы = КонецХронометража - ДатаНачалаХронометража;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ДлительностьРаботы;
	
КонецФункции

// На клиенте открывает диалог (если нужно) и заполняет параметры работы для последующего добавления в отчет
Функция ПодготовитьРаботуДляДобавкиВОтчет(ДатаОтчета, ВключенХронометраж, 
	ДатаНачалаХронометража, ДатаКонцаХронометража, ВидыРабот, Объект,
	СпособУказанияВремени) Экспорт

	ПараметрыОтчета = Неопределено;
	НуженДиалог = Ложь;
	
	Если ВключенХронометраж Тогда // сейчас будем выключать хронометраж и делать запись отчета
		Если ДатаНачалаХронометража <> '00010101' Тогда
			СегодняшнийДень = НачалоДня(ТекущаяДата());
			ДеньНачала = НачалоДня(ДатаНачалаХронометража);
			
			Если ДеньНачала <> СегодняшнийДень Тогда
				НуженДиалог = Истина;
			КонецЕсли;
		Иначе
			
		КонецЕсли;
		
		Если ВидыРабот.Количество() <> 1 Тогда
			НуженДиалог = Истина;
		КонецЕсли;
	Иначе
		НуженДиалог = Истина;
	КонецЕсли;
	
	Если НуженДиалог = Ложь Тогда
		ВидРаботы = ВидыРабот[0].Значение;
		
		ДатаОкончания = ТекущаяДата();
		ДлительностьРаботы = ДатаОкончания - ДатаНачалаХронометража;
		
		ПараметрыОтчета = Новый Структура();
		ПараметрыОтчета.Вставить("ДатаОтчета", ДатаОтчета);
		ПараметрыОтчета.Вставить("ВидРаботы", ВидРаботы);
		ПараметрыОтчета.Вставить("ОписаниеРаботы", Строка(Объект));
		ПараметрыОтчета.Вставить("ДлительностьРаботы", ДлительностьРаботы);
		ПараметрыОтчета.Вставить("НачалоРаботы", ДатаНачалаХронометража);
		ПараметрыОтчета.Вставить("ОкончаниеРаботы", ДатаОкончания);
		ПараметрыОтчета.Вставить("Объект", Объект);
		
	Иначе
		ДлительностьРаботы = 0;
		
		Если ВключенХронометраж И ДатаНачалаХронометража <> '00010101000000' Тогда
			
			СегодняшнийДень = НачалоДня(ТекущаяДата());
			ДеньНачала = НачалоДня(ДатаНачалаХронометража);
			
			Если ДеньНачала = СегодняшнийДень Тогда
				КонецХронометража = ТекущаяДата();
				ДлительностьРаботы = КонецХронометража - ДатаНачалаХронометража;
			КонецЕсли;
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("ДатаОтчета", ДатаОтчета);
		ПараметрыФормы.Вставить("ВидыРабот", ВидыРабот);
		ПараметрыФормы.Вставить("ОписаниеРаботы", Строка(Объект));
		ПараметрыФормы.Вставить("ДлительностьРаботы", ДлительностьРаботы);
		ПараметрыФормы.Вставить("НачалоРаботы", ДатаНачалаХронометража);
		ПараметрыФормы.Вставить("ОкончаниеРаботы", КонецХронометража);
		ПараметрыФормы.Вставить("Объект", Объект);
		ПараметрыФормы.Вставить("СпособУказанияВремени", СпособУказанияВремени);
		
		ПараметрыОтчета = ОткрытьФормуМодально("РегистрСведений.ФактическиеТрудозатраты.Форма.ФормаДобавленияРаботы", ПараметрыФормы);
	КонецЕсли;
	
	Возврат ПараметрыОтчета;
КонецФункции // ПодготовитьРаботуДляДобавкиВОтчет()


// Добавить в отчет после выполнения задачи
Процедура ДобавитьВОтчетПослеВыполненияЗадачи(
	ОпцияВестиУчетТрудозатрат,
	ДатаИсполнения, 
	Объект, 
	ВключенХронометраж, 
	ДатаНачалаХронометража, 
	ДатаКонцаХронометража,
	ВидыРабот, 
	СпособУказанияВремени) Экспорт
	
	ДобавлятьВОтчет = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиента().ПерсональныеНастройкиУчетаВремени.ДобавлятьРаботуВЕжедневныйОтчетПриВыполненииЗадачи;
	ПараметрыОтчета = Неопределено;
	ПараметрыОповещения = Неопределено;
	
	Если ОпцияВестиУчетТрудозатрат 
		И (ДобавлятьВОтчет 
		ИЛИ ВключенХронометраж
		И ДатаНачалаХронометража <> '00010101000000') Тогда
		
		ДатаОтчета = ДатаИсполнения;	
		ПараметрыОтчета = ПодготовитьРаботуДляДобавкиВОтчет(
			ДатаОтчета, 
			ВключенХронометраж, 
			ДатаНачалаХронометража, 
			ДатаКонцаХронометража, 
			ВидыРабот, 
			Объект, 
			СпособУказанияВремени);
			
		Если ПараметрыОтчета <> Неопределено Тогда
			УчетВремени.ДобавитьВОтчет(ПараметрыОтчета, ПараметрыОповещения);
		Иначе
			УчетВремени.ОчиститьХронометраж(Объект);	
		КонецЕсли;	
		
		ПоказатьОповещение(ПараметрыОповещения, ВключенХронометраж, Объект);
	КонецЕсли;	
	
КонецПроцедуры	
