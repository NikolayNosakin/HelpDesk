// Возвращает список наименований стандартных разделов поиска
//
Функция ПолучитьСтандартныеРазделыПоиска() Экспорт
	
	НаименованияСтандартныхРазделов = ПолучитьНаименованияСтандартныхРазделовПоиска();
	Результат = Новый СписокЗначений;
	Для каждого Наименование Из НаименованияСтандартныхРазделов Цикл
		Результат.Добавить(ПолучитьСтандартныйРазделПоискаПоНаименованию(Наименование), Наименование);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьНаименованияСтандартныхРазделовПоиска() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить(НСтр("ru = 'Заявки и файлы'"));
	Результат.Добавить(НСтр("ru = 'Только заявки'"));
	Результат.Добавить(НСтр("ru = 'Проекты и почта'"));
	Результат.Добавить(НСтр("ru = 'База знаний'"));
	Результат.Добавить(НСтр("ru = 'Только задачи'"));
	Результат.Добавить(НСтр("ru = 'Файлы и версии'"));
	Результат.Добавить(НСтр("ru = 'Файлы, без версий'"));
	Результат.Добавить(НСтр("ru = 'Входящие письма, без файлов'"));
	Результат.Добавить(НСтр("ru = 'Исходящие письма, без файлов'"));
	
	Возврат Результат;
	
КонецФункции

// Возвращает признак того, что передано наименование стандартного раздела поиска.
//
Функция ЭтоСтандартныйРазделПоиска(Наименование) Экспорт
	
	НаименованияСтандартныхРазделов = ПолучитьНаименованияСтандартныхРазделовПоиска();
	Возврат НаименованияСтандартныхРазделов.Найти(Наименование) <> Неопределено;
	
КонецФункции

// Возвращает массив метаданных для предопределенного раздела поиска
//
Функция ПолучитьСтандартныйРазделПоискаПоНаименованию(Наименование) Экспорт
	
	Результат = Новый Массив;
	Если ВРег(Наименование) = ВРег(НСтр("ru = 'Заявки и файлы'")) Тогда
		Результат.Добавить("Метаданные.Документы.Заявка");
		Результат.Добавить("Метаданные.Справочники.Файлы");
		Результат.Добавить("Метаданные.Справочники.ВерсииФайлов");
		
	ИначеЕсли ВРег(Наименование) = ВРег(НСтр("ru = 'Только заявки'")) Тогда
		Результат.Добавить("Метаданные.Документы.Заявка");
	
	ИначеЕсли ВРег(Наименование) = ВРег(НСтр("ru = 'Проекты и почта'")) Тогда
		Результат.Добавить("Метаданные.Задачи.ЗадачаИсполнителя");
		Результат.Добавить("Метаданные.БизнесПроцессы.Исполнение");
		Результат.Добавить("Метаданные.Справочники.Проекты");
		Результат.Добавить("Метаданные.Справочники.ПроектныеЗадачи");
		Результат.Добавить("Метаданные.Документы.ВходящееПисьмо");
        Результат.Добавить("Метаданные.Документы.ИсходящееПисьмо");
		
	ИначеЕсли ВРег(Наименование) = ВРег(НСтр("ru = 'База знаний'")) Тогда
		Результат.Добавить("Метаданные.Справочники.РазделыБазыЗнаний");
		Результат.Добавить("Метаданные.Справочники.СтатьиБазыЗнаний");
		
	ИначеЕсли ВРег(Наименование) = ВРег(НСтр("ru = 'Только задачи'")) Тогда
		Результат.Добавить("Метаданные.Задачи.ЗадачаИсполнителя");
		
	ИначеЕсли ВРег(Наименование) = ВРег(НСтр("ru = 'Файлы и версии'")) Тогда
		Результат.Добавить("Метаданные.Справочники.Файлы");
		Результат.Добавить("Метаданные.Справочники.ВерсииФайлов");
		
	ИначеЕсли ВРег(Наименование) = ВРег(НСтр("ru = 'Файлы, без версий'")) Тогда
		Результат.Добавить("Метаданные.Справочники.Файлы");
				
	ИначеЕсли ВРег(Наименование) = ВРег(НСтр("ru = 'Входящие письма, без файлов'")) Тогда
		Результат.Добавить("Метаданные.Документы.ВходящееПисьмо");
		
	ИначеЕсли ВРег(Наименование) = ВРег(НСтр("ru = 'Исходящие письма, без файлов'")) Тогда
		Результат.Добавить("Метаданные.Документы.ИсходящееПисьмо");
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Возвращает структуру настроек поиска по умолчанию
//
Функция ПолучитьНастройкиПоискаПоУмолчанию() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ИскатьСочетанияСлов", 0);
	Результат.Вставить("РезультатовНаСтранице", 20);
	Результат.Вставить("ОтображатьТекстовоеОписание", Истина);
	Результат.Вставить("ОтображатьДополнительнуюИнформацию", Истина);
	Результат.Вставить("ВыделятьСловаЦветом", Ложь);
	Результат.Вставить("ИскатьСловаСОшибками", Ложь);
	Результат.Вставить("ПорогНечеткости", 20);
	Результат.Вставить("РазделыПоиска", ПолучитьСтандартныеРазделыПоиска());
	
	Возврат Результат;
	
КонецФункции

// Возвращает строку с дополнительной информацией по объекту
//
Функция ПолучитьДополнительнуюИнформациюПоОбъекту(Ссылка) Экспорт
	
	ТипЗначения = ТипЗнч(Ссылка);
	Если Не (Справочники.ТипВсеСсылки().СодержитТип(ТипЗначения)
		Или Документы.ТипВсеСсылки().СодержитТип(ТипЗначения)
		Или Задачи.ТипВсеСсылки().СодержитТип(ТипЗначения)
		Или БизнесПроцессы.ТипВсеСсылки().СодержитТип(ТипЗначения)) Тогда
		Возврат "";
	КонецЕсли;
	
	Результат = "";
	
	Если ТипЗначения = Тип("СправочникСсылка.ВерсииФайлов") Тогда
		Файл = НСтр("ru = 'Файл: '") + Ссылка.Владелец;
		ДобавитьЗначениеКСтрокеЧерезРазделитель(Результат, "; ", Файл);
	КонецЕсли;
	
	ИнформацияОВладельце = "";
	Папка = "";
	Владелец = "";
	Если ТипЗначения = Тип("СправочникСсылка.Файлы") Тогда
		Если ТипЗнч(Ссылка.ВладелецФайла) = Тип("СправочникСсылка.ПапкиФайлов") Тогда
			Папка = ПолучитьПолныйПутьПапки(Ссылка.ВладелецФайла);
		ИначеЕсли ТипЗнч(Ссылка.ВладелецФайла) = Тип("ДокументСсылка.Заявка") Тогда
			Владелец = Строка(Ссылка.ВладелецФайла);
		КонецЕсли;
		
	ИначеЕсли ТипЗначения = Тип("СправочникСсылка.ВерсииФайлов") Тогда
		Если ТипЗнч(Ссылка.Владелец.ВладелецФайла) = Тип("СправочникСсылка.ПапкиФайлов") Тогда
			Папка = ПолучитьПолныйПутьПапки(Ссылка.Владелец.ВладелецФайла);
		ИначеЕсли ТипЗнч(Ссылка.Владелец.ВладелецФайла) = Тип("ДокументСсылка.Заявка") Тогда
			Владелец = Строка(Ссылка.Владелец.ВладелецФайла);
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ПустаяСтрока(Папка) Тогда
		Папка = НСтр("ru = 'Папка: '") + Папка;
		ДобавитьЗначениеКСтрокеЧерезРазделитель(Результат, "; ", Папка);
	КонецЕсли;
	
	Если Не ПустаяСтрока(Владелец) Тогда
		Владелец = НСтр("ru = 'Принадлежит документу: '") + Владелец;
		ДобавитьЗначениеКСтрокеЧерезРазделитель(Результат, "; ", Владелец);
	КонецЕсли;
	
	Если ТипЗначения = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
		Предмет = Строка(Ссылка.Предмет);
		Если Не ПустаяСтрока(Предмет) Тогда
			Предмет = НСтр("ru = 'Предмет: '") + Предмет;
		Иначе
			Предмет = НСтр("ru = 'Предмет не задан'");
		КонецЕсли;
		ДобавитьЗначениеКСтрокеЧерезРазделитель(Результат, "; ", Предмет);
	КонецЕсли;
		
	Возврат Результат;
	
КонецФункции

// Принимает массив ссылок на объекты - результаты поиска
// Возвращает соответствие с дополнительной информацией по объектам
//
Функция ПолучитьДополнительнуюИнформациюПоОбъектам(Массив) Экспорт
	
	Результат = Новый Соответствие;
	Для каждого Элемент Из Массив Цикл
		Результат.Вставить(Элемент, ПолучитьДополнительнуюИнформациюПоОбъекту(Элемент));
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьПолныйПутьПапки(Папка)
	
	Если Не ЗначениеЗаполнено(Папка) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекПапка = Папка;
	Результат = " \ " + Строка(ТекПапка);
	Пока ЗначениеЗаполнено(ТекПапка.Родитель) Цикл
		ТекПапка = ТекПапка.Родитель;
		Результат = " \ " + Строка(ТекПапка) + Результат;
	КонецЦикла;
	
	Возврат Сред(Результат, 4);
	
КонецФункции
