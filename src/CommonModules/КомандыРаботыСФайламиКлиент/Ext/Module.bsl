////////////////////////////////////////////////////////////////////////////////
// Подсистема "Работа с файлами".
//
////////////////////////////////////////////////////////////////////////////////

// Сохраняет отредактированный файл в ИБ и снимает с него блокировку
Процедура ЗакончитьРедактирование(
	ПараметрКоманды, 
	ИдентификаторФормы, 
	Знач ХранитьВерсии = Неопределено,
	Знач РедактируетТекущийПользователь = Неопределено, 
	Знач Редактирует = Неопределено,
	Знач АвторТекущейВерсии = Неопределено,
	Знач Кодировка = Неопределено) Экспорт
	
	Если ПараметрКоманды = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Если ТипЗнч(ПараметрКоманды) = Тип("Массив") Тогда
		
		МассивОбработанных = РаботаСФайламиКлиент.ЗакончитьРедактированиеПоСсылкам(
			ПараметрКоманды, 
			ИдентификаторФормы); 
			
		ОповеститьОбИзменении(Тип("СправочникСсылка.Файлы"));
		
		Для Каждого ФайлСсылка Из МассивОбработанных Цикл
			Оповестить("Запись_Файл", Новый Структура("Событие", "ЗаконченоРедактирование"), ФайлСсылка);
			Оповестить("Запись_Файл", Новый Структура("Событие", "ДанныеФайлаИзменены"), ФайлСсылка);
			Оповестить("Запись_Файл", Новый Структура("Событие", "ВерсияСохранена"), ФайлСсылка);
		КонецЦикла;	
		
	Иначе	
		
		РедактированиеЗакончено = Ложь;
		
		РедактированиеЗакончено = РаботаСФайламиКлиент.ЗакончитьРедактирование(
			ПараметрКоманды, 
			ИдентификаторФормы,
			ХранитьВерсии,
			РедактируетТекущийПользователь,
			Редактирует,
			АвторТекущейВерсии,
			"", //ПереданныйПолныйПутьКФайлу
			Неопределено, //СоздатьНовуюВерсию
			Неопределено, //КомментарийКВерсии
			Истина, //ПоказыватьОповещение
			Ложь, //ПрименитьКоВсем
			Истина, //ОсвобождатьФайлы
			Кодировка); 
		
			Если РедактированиеЗакончено Тогда 
				
			Оповестить("Запись_Файл", Новый Структура("Событие", "ЗаконченоРедактирование"), ПараметрКоманды);
			
			ОповеститьОбИзменении(ПараметрКоманды);
			Оповестить("Запись_Файл", Новый Структура("Событие", "ДанныеФайлаИзменены"), ПараметрКоманды);
			Оповестить("Запись_Файл", Новый Структура("Событие", "ВерсияСохранена"), ПараметрКоманды);
		КонецЕсли;	
		
	КонецЕсли;
	
КонецПроцедуры

// Блокирует файл для редактирования и открывает его
Процедура Редактировать(ОбъектСсылка, УникальныйИдентификатор = Неопределено, РабочийКаталогВладельца = Неопределено) Экспорт
	
	Если ОбъектСсылка = Неопределено Тогда
		Возврат;
	КонецЕсли;	
		
	Если РаботаСФайламиКлиент.РедактироватьФайлПоСсылке(ОбъектСсылка, УникальныйИдентификатор, РабочийКаталогВладельца) Тогда
		ОповеститьОбИзменении(ОбъектСсылка);
		Оповестить("Запись_Файл", Новый Структура("Событие", "ДанныеФайлаИзменены"), ОбъектСсылка);
		Оповестить("Запись_Файл", Новый Структура("Событие", "ФайлРедактировался"), ОбъектСсылка);
	КонецЕсли;	
	
КонецПроцедуры

// Выполняет блокировку файла или нескольких файлов
// ПараметрКоманды - либо ссылка на файл, либо массив ссылок на файлы
Процедура Занять(ПараметрКоманды, УникальныйИдентификатор = Неопределено) Экспорт
	
	Если ПараметрКоманды = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ПараметрКоманды) = Тип("Массив") Тогда
		
		РаботаСФайламиКлиент.ЗанятьФайлыПоСсылкам(ПараметрКоманды);
		
		ОповеститьОбИзменении(Тип("СправочникСсылка.Файлы"));
		Для Каждого ФайлСсылка Из ПараметрКоманды Цикл
			Оповестить("Запись_Файл", Новый Структура("Событие", "ДанныеФайлаИзменены"), ФайлСсылка);
		КонецЦикла;	
		
	Иначе	
		
		Если РаботаСФайламиКлиент.ЗанятьФайлПоСсылке(ПараметрКоманды, УникальныйИдентификатор) Тогда 
			ОповеститьОбИзменении(ПараметрКоманды);
			Оповестить("Запись_Файл", Новый Структура("Событие", "ДанныеФайлаИзменены"), ПараметрКоманды);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

// Освобождает занятый ранее файл
Процедура ОсвободитьФайл(
	ПараметрКоманды,
	Знач ХранитьВерсии = Неопределено,
	Знач РедактируетТекущийПользователь = Неопределено, 
	Знач Редактирует = Неопределено,
	УникальныйИдентификатор = Неопределено) Экспорт

	Если ПараметрКоманды = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ПараметрКоманды) = Тип("Массив") Тогда
		
		РаботаСФайламиКлиент.ОсвободитьФайлыПоСсылкам(ПараметрКоманды); 
		
		ОповеститьОбИзменении(Тип("СправочникСсылка.Файлы"));		
		Для Каждого ФайлСсылка Из ПараметрКоманды Цикл
			Оповестить("Запись_Файл", Новый Структура("Событие", "ДанныеФайлаИзменены"), ФайлСсылка);
		КонецЦикла;	
			
	Иначе	
		
		Если РаботаСФайламиКлиент.ОсвободитьФайл(
			ПараметрКоманды, 
			ХранитьВерсии,
			РедактируетТекущийПользователь,
			Редактирует,
			УникальныйИдентификатор) Тогда
			
			ОповеститьОбИзменении(ПараметрКоманды);
			Оповестить("Запись_Файл", Новый Структура("Событие", "ДанныеФайлаИзменены"), ПараметрКоманды);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Открывает файл для просмотра
Процедура Открыть(ДанныеФайла) Экспорт
	
	РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла);
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Событие", "ФайлОткрыт");
	Оповестить("ФайлОткрыт", ПараметрыОповещения, ДанныеФайла.Ссылка);
	
КонецПроцедуры

// Сохраняет файл в информационной базе, но не освобождает его
Процедура ОпубликоватьФайл(ПараметрКоманды, ИдентификаторФормы) Экспорт
	
	Если ПараметрКоманды = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ПараметрКоманды) = Тип("Массив") Тогда
		
		РаботаСФайламиКлиент.ОпубликоватьФайлыПоСсылкам(ПараметрКоманды, ИдентификаторФормы);
		
		Для Каждого ФайлСсылка Из ПараметрКоманды Цикл
			Оповестить("Запись_Файл", Новый Структура("Событие", "ДанныеФайлаИзменены"), ФайлСсылка);
			Оповестить("Запись_Файл", Новый Структура("Событие", "ВерсияСохранена"), ФайлСсылка);
		КонецЦикла;	
			
	Иначе	
		
		Если РаботаСФайламиКлиент.ОпубликоватьФайл(ПараметрКоманды, ИдентификаторФормы) Тогда
			Оповестить("Запись_Файл", Новый Структура("Событие", "ДанныеФайлаИзменены"), ПараметрКоманды);
			Оповестить("Запись_Файл", Новый Структура("Событие", "ВерсияСохранена"), ПараметрКоманды);
		КонецЕсли;	
		
	КонецЕсли;
	
КонецПроцедуры

// Открывает каталог на локальном компьютере в котором размещен этот файл
Процедура ОткрытьКаталогФайла(ДанныеФайла) Экспорт
	
	РаботаСФайламиКлиент.КаталогФайла(ДанныеФайла);
	
КонецПроцедуры

// Сохраняет текущую версию файла в выбранный каталог на жестком или сетевом диске
Процедура СохранитьКак(ДанныеФайла, УникальныйИдентификатор = Неопределено) Экспорт
	
	РаботаСФайламиКлиент.СохранитьКак(ДанныеФайла, УникальныйИдентификатор);	
	
КонецПроцедуры

// Выбирает на  диске файл и создает из него новую версию
Процедура ОбновитьИзФайлаНаДиске(ДанныеФайла, ИдентификаторФормы) Экспорт
	
	НачатьПодключениеРасширенияРаботыСФайлами(Новый ОписаниеОповещения("ОбновитьИзФайлаНаДискеЗавершение", ЭтотОбъект, Новый Структура("ДанныеФайла, ИдентификаторФормы", ДанныеФайла, ИдентификаторФормы)));
	
КонецПроцедуры

Процедура ОбновитьИзФайлаНаДискеЗавершение(Подключено, ДополнительныеПараметры) Экспорт
	
	ДанныеФайла = ДополнительныеПараметры.ДанныеФайла;
	ИдентификаторФормы = ДополнительныеПараметры.ИдентификаторФормы;
	
	
	РасширениеПодключено = Подключено;
	Если РасширениеПодключено Тогда
		
		Если РаботаСФайламиКлиент.ОбновитьИзФайлаНаДиске(ДанныеФайла, ИдентификаторФормы) Тогда	
			ОповеститьОбИзменении(ДанныеФайла.Ссылка);
			Оповестить("Запись_Файл", Новый Структура("Событие", "ДанныеФайлаИзменены"), ДанныеФайла.Ссылка);
			Оповестить("Запись_Файл", Новый Структура("Событие", "ВерсияСохранена"), ДанныеФайла.Ссылка);
		КонецЕсли;
		
	Иначе
		ПоказатьПредупреждение(Неопределено,НСтр("ru = 'Для выполнения данной операции вам нужно установить расширение работы с файлами.'"));
	КонецЕсли;
	
КонецПроцедуры

