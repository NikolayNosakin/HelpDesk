// УправлениеДоступом

// Пояснения см. в комментарии к процедуре УправлениеДоступом.ДобавитьПоле()
Процедура ЗаполнитьСвойстваОграниченияДоступа(Поля, ВидыДоступа) Экспорт
	
	//// Правообразующие поля
	//УправлениеДоступом.ДобавитьПоле(Поля, "Владелец");
	//
	//// Виды доступа
	//УправлениеДоступом.ДобавитьВидДоступа(ВидыДоступа, "Объекты", "Чтение, Добавление, Изменение", , "Владелец");
	
КонецПроцедуры

// Пояснения см. в комментарии к процедуре УправлениеДоступом.УстановитьПраваНабора()
Процедура ЗаполнитьОграничениеДоступа(Наборы, Значения, Роль = Неопределено) Экспорт
	
	//УправлениеДоступом.УстановитьПраваНабора(Наборы, "Чтение, Добавление, Изменение");
	//УправлениеДоступом.ДобавитьЭлементНабора(Наборы, "Объекты", Значения.Владелец);
	
КонецПроцедуры

// Конец УправлениеДоступом

Функция ПолучитьПлановыеТрудозатратыИсполнителяПроектнойЗадачи(
	ПроектнаяЗадача, 
	Исполнитель, 
	ОсновнойОбъектАдресации = Неопределено,
	ДополнительныйОбъектАдресации = Неопределено) Экспорт
	
	// исполнителей нет
	Если ПроектнаяЗадача.Исполнители.Количество() = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	Для Каждого ИсполнительПроектнойЗадачи Из ПроектнаяЗадача.Исполнители Цикл
		
		Если ТипЗнч(Исполнитель) = Тип("СправочникСсылка.РолиИсполнителей") Тогда
			
			Если Исполнитель = ИсполнительПроектнойЗадачи.Исполнитель
				И ОсновнойОбъектАдресации = ИсполнительПроектнойЗадачи.ОсновнойОбъектАдресации
				И ДополнительныйОбъектАдресации = ИсполнительПроектнойЗадачи.ДополнительныйОбъектАдресации Тогда
				
				Возврат ИсполнительПроектнойЗадачи.ТекущийПланТрудозатраты
				
			КонецЕсли;
			
		Иначе	
			
			Если Исполнитель = ИсполнительПроектнойЗадачи.Исполнитель Тогда
				Возврат ИсполнительПроектнойЗадачи.ТекущийПланТрудозатраты;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции
