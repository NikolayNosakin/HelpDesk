#Область ИнтерфейсКалендаряСотрудника

// Функция определяет пиктограмму для элемента записи календаря
//
// Параметры:
//  ЗаданиеНаРаботу	 - ДокументСсылка.ЗаданиеНаРаботу	 - задание, для записи календаря которого подбирается картинка
// 
// Возвращаемое значение:
//  Картинка - пиктограмма записи календаря
//
Функция КартинкаЗаписиКалендаря(ЗаданиеНаРаботу) Экспорт
	
	Возврат БиблиотекаКартинок.ПодсистемаЗаявки;
	
КонецФункции

// Функция определяет цвет текста для элемента записи календаря
//
// Параметры:
//  ЗаданиеНаРаботу	 - ДокументСсылка.ЗаданиеНаРаботу	 - задание, для записи календаря которого подбирается цвет
// 
// Возвращаемое значение:
//  Цвет - цвет текста записи календаря
//
Функция ЦветТекстаЗаписиКалендаря(Заявка) Экспорт
	
	ЦветСостояния = Новый Цвет;
	
	Возврат ЦветСостояния;
	
КонецФункции

// Процедура заполняет таблицу описаний расширенного ввода записи календаря
//
// Параметры:
//  ТаблицаОписаний	 - ТаблицаЗначений	 - описание колонок см. Справочник.ЗаписиКалендаряСотрудника.ПриЗаполненииРасширенногоВводаЗаписиКалендаря()
//
Процедура ПриЗаполненииРасширенногоВводаЗаписиКалендаря(ТаблицаОписаний) Экспорт
	
	НоваяСтрока = ТаблицаОписаний.Добавить();
	НоваяСтрока.ИмяФормы = "Документ.Заявка.ФормаОбъекта";
	НоваяСтрока.ПараметрыФормы = Новый Структура();
	НоваяСтрока.Представление = НСтр("ru='Ввести новую заявку';uk='Ввести нову заявку'");

КонецПроцедуры

// Функция определяет цвет текста для элемента записи календаря
//
// Параметры:
//  ЗаданиеНаРаботу	 - ДокументСсылка.ЗаданиеНаРаботу	 - задание, для записи календаря которого подбирается цвет
// 
// Возвращаемое значение:
//  Цвет - цвет текста записи календаря
//
Функция ШрифтТекстаЗаписиКалендаря(Заявка) Экспорт
	
	ШрифтСостояния = Новый Шрифт(,,,,,Заявка.ЗаявкаЗакрыта);
	
	Возврат ШрифтСостояния;
	
КонецФункции

#КонецОбласти
