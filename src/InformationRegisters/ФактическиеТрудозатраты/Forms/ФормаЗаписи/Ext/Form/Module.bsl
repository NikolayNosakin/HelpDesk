
&НаСервере
Функция ЭлементыДляСохранения()
	
	СохраняемыеЭлементы = Новый Структура;
	СохраняемыеЭлементы.Вставить("ВидРабот", Запись.ВидРабот);
	Возврат СохранениеВводимыхЗначений.СформироватьТаблицуСохраняемыхЭлементов(СохраняемыеЭлементы);
	
КонецФункции

&НаСервере
Процедура ЗаписатьВводимыеЗначения()
	
	// Сохранение вводимых значений
	СохранениеВводимыхЗначений.ОбновитьСпискиВыбора(ЭтотОбъект, ЭлементыДляСохранения(), ЭтотОбъект.ИмяФормы);
	
КонецПроцедуры	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Параметры.Ключ) Тогда 
		
		Запись.ДатаДобавления = ТекущаяДата();
		Запись.МесяцНачисления = НачалоМесяца(ТекущаяДата());
		Запись.Пользователь = Пользователи.ТекущийПользователь();
		Запись.Подразделение = РаботаСПользователями.ПолучитьПодразделение(Запись.Пользователь);
		
		Если Параметры.Свойство("Источник") И ЗначениеЗаполнено(Параметры.Источник) Тогда 
			Запись.Источник = Параметры.Источник;
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(Запись.Источник) И ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") Тогда 
			
			Если ТипЗнч(Запись.Источник) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда 
				Запись.Проект = Запись.Источник.Проект;
				Запись.ПроектнаяЗадача = Запись.Источник.ПроектнаяЗадача;
				
			ИначеЕсли ТипЗнч(Запись.Источник) = Тип("ДокументСсылка.Заявка") Тогда
				Запись.Проект = Запись.Источник.Проект;
				Запись.ПроектнаяЗадача = Запись.Источник.ПроектнаяЗадача;
								
			ИначеЕсли ТипЗнч(Запись.Источник) = Тип("СправочникСсылка.Проекты") Тогда
				Запись.Проект = Запись.Источник;
				Запись.ПроектнаяЗадача = Неопределено;
				
			ИначеЕсли ТипЗнч(Запись.Источник) = Тип("СправочникСсылка.ПроектныеЗадачи") Тогда
				Запись.Проект = Запись.Источник.Владелец;
				Запись.ПроектнаяЗадача = Запись.Источник;
				
			ИначеЕсли ДелопроизводствоКлиентСервер.ЭтоДокумент(Запись.Источник) 
				Или ВстроеннаяПочтаКлиентСервер.ЭтоПисьмо(Запись.Источник)
				Или ТипЗнч(Запись.Источник) = Тип("СправочникСсылка.Файлы") Тогда 
				
				Запись.Проект = Запись.Источник.Проект;
				Запись.ПроектнаяЗадача = Неопределено;
				
			КонецЕсли; 
			
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(Запись.Источник) Тогда 
			Если ВстроеннаяПочтаКлиентСервер.ЭтоИсходящееПисьмо(Запись.Источник) Тогда
				Запись.ОписаниеРаботы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Составление письма ""%1""'"),
					Запись.Источник.Тема);
				
			ИначеЕсли ВстроеннаяПочтаКлиентСервер.ЭтоВходящееПисьмо(Запись.Источник) Тогда
				Запись.ОписаниеРаботы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Чтение письма ""%1""'"),
					Запись.Источник.Тема);
					
			Иначе		
				Запись.ОписаниеРаботы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Работа над ""%1""'"),
					Запись.Источник);
				
			КонецЕсли;
		КонецЕсли;
		
		ЗаполнитьРольИсполнителя(Запись.Пользователь,Запись.Проект,Запись.ПроектнаяЗадача,Запись.ДатаДобавления);

	КонецЕсли;	
	
	
	ДлительностьРаботы = УчетВремениКлиентСервер.ЧислоВСтроку(Запись.Длительность);
	ПроектЗадача = РаботасПроектамиКлиентСервер.ПредставлениеПроектаЗадачи(Запись.Проект, Запись.ПроектнаяЗадача);
	
	СпособУказанияВремени = ХранилищеОбщихНастроек.Загрузить("НастройкиУчетаВремени", "СпособУказанияВремени");
	Если Не ЗначениеЗаполнено(СпособУказанияВремени) Тогда
		СпособУказанияВремени = Перечисления.СпособыУказанияВремени.Длительность;
	КонецЕсли;	
	
	Если СпособУказанияВремени = Перечисления.СпособыУказанияВремени.Длительность Тогда 
		Элементы.ДлительностьРаботы.Видимость = Истина;
		Элементы.Начало.Видимость = Ложь;
		Элементы.Окончание.Видимость = Ложь;
	Иначе
		Элементы.ДлительностьРаботы.Видимость = Ложь;
		Элементы.Начало.Видимость = Истина;
		Элементы.Окончание.Видимость = Истина;
	КонецЕсли;
	
	Элементы.Пользователь.ТолькоПросмотр = Истина;
	Если РольДоступна("ПолныеПрава") Тогда 
		Элементы.Пользователь.ТолькоПросмотр = Ложь;
	ИначеЕсли ЗначениеЗаполнено(Запись.Проект) 
		И Запись.Проект.Руководитель = Пользователи.ТекущийПользователь() Тогда 
		Элементы.Пользователь.ТолькоПросмотр = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(Запись.ВидРабот) Тогда
		ЗаписатьВводимыеЗначения();
	КонецЕсли;
	
	Если СпособУказанияВремени = Перечисления.СпособыУказанияВремени.Длительность Тогда 
		ТекущийОбъект.Длительность = УчетВремениКлиентСервер.ЧислоИзСтроки(ДлительностьРаботы);
	ИначеЕсли ЗначениеЗаполнено(ТекущийОбъект.Окончание) И ЗначениеЗаполнено(ТекущийОбъект.Начало) Тогда 
		ТекущийОбъект.Длительность = ТекущийОбъект.Окончание - ТекущийОбъект.Начало;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ТипЗнч(Запись.Источник) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
		Оповестить("Изменение_ФактическиеТрудозатратыЗадачи", Запись.Источник, ЭтотОбъект);
	КонецЕсли;
	
	Оповестить("Изменение_ФактическиеТрудозатратыПроектнойЗадачи", Запись.ПроектнаяЗадача, ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	СпособУказанияВремени = ХранилищеОбщихНастроек.Загрузить("НастройкиУчетаВремени", "СпособУказанияВремени");
	Если Не ЗначениеЗаполнено(СпособУказанияВремени) Тогда
		СпособУказанияВремени = Перечисления.СпособыУказанияВремени.Длительность;
	КонецЕсли;
	
	Если СпособУказанияВремени = Перечисления.СпособыУказанияВремени.Длительность Тогда 
		Если Не ЗначениеЗаполнено(ДлительностьРаботы) Или ДлительностьРаботы = "00:00" Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Не заполнено поле ""Длительность""'"),,
				"ДлительностьРаботы",, 
				Отказ);
		КонецЕсли;
	Иначе
		Если Не ЗначениеЗаполнено(Запись.Начало) Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Не заполнено поле ""Начало""'"),,
				"Запись.Начало",, 
				Отказ);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Запись.Окончание) Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Не заполнено поле ""Окончание""'"),,
				"Запись.Окончание",, 
				Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") Тогда 
		Если ЗначениеЗаполнено(Запись.Проект) И не ЗначениеЗаполнено(Запись.РольПользователя) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Не заполнена роль пользователя на проекте!""'"),,
				"РольПользователя",, 
				Отказ);
		КонецЕсли;
		
		Если ЕстьПеревыполнение И не ЗначениеЗаполнено(Запись.ПричинаПеревыполнения) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Не заполнена причина перевыполнения!""'"),,
				"ПричинаПеревыполнения",, 
				Отказ);
		КонецЕсли;
	
		ТекстСообщения = "";
		РезультатПроверки = РаботаСПроектами.ПроверитьЗаписьОФактическихТрудозатратах(
			Запись.Проект,
			Запись.ПроектнаяЗадача,
			Запись.Источник,
			Запись.РольПользователя,
			ТекстСообщения);
		Если Не РезультатПроверки Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,,
				"ПроектЗадача",, 
				Отказ);	
		КонецЕсли;	
		
		//Последняя проверка - проверим не превышаем ли мы норму
		Если СпособУказанияВремени = ПредопределенноеЗначение("Перечисление.СпособыУказанияВремени.Длительность") Тогда 
			Длительность = УчетВремениКлиентСервер.ЧислоИзСтроки(ДлительностьРаботы);
		ИначеЕсли ЗначениеЗаполнено(Запись.Начало) И ЗначениеЗаполнено(Запись.Окончание) Тогда 
			Длительность = Запись.Окончание - Запись.Начало;
		КонецЕсли;	

		РезультатПроверки = РаботаСЗаявками.ПроверитьПревышениеНормыТрудозатрат(Запись.Проект,
			Запись.ПроектнаяЗадача,
			Запись.Источник,
			Запись.РольПользователя,
			ТекстСообщения,Длительность);
		Если Не РезультатПроверки Тогда
			Отказ = Не ЗначениеЗаполнено(Запись.ПричинаПеревыполнения);
			Элементы.ГруппаОписанияПеревыполнения.Видимость = Истина;
			ОписаниеПеревыполнения = ТекстСообщения;
			ЕстьПеревыполнение = Истина;
		Иначе
			Элементы.ГруппаОписанияПеревыполнения.Видимость = Ложь;
			ОписаниеПеревыполнения = "";
			ЕстьПеревыполнение = Ложь;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроектЗадачаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСПроектамиКлиент.ВыбратьПроектЗадачу(Элемент, Запись.Проект, Запись.ПроектнаяЗадача);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроектЗадачаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда 	
		Запись.Проект = ВыбранноеЗначение.Проект;
		Запись.ПроектнаяЗадача = ВыбранноеЗначение.ПроектнаяЗадача;
		ПроектЗадача = РаботасПроектамиКлиентСервер.ПредставлениеПроектаЗадачи(
			ВыбранноеЗначение.Проект, 
			ВыбранноеЗначение.ПроектнаяЗадача,
			ВыбранноеЗначение.ЕстьПроектныеЗадачи);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПроектЗадачаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Запись.ПроектнаяЗадача) Тогда 
		ПоказатьЗначение(Неопределено, Запись.ПроектнаяЗадача);
	ИначеЕсли ЗначениеЗаполнено(Запись.Проект) Тогда 
		ПоказатьЗначение(Неопределено, Запись.Проект);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПроектЗадачаОчистка(Элемент, СтандартнаяОбработка)
	
	Запись.Проект = Неопределено;
	Запись.ПроектнаяЗадача = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ДлительностьРаботыНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СписокВыбора = СписокВыбораВремени();
	
	ВыбранноеЗначение = Неопределено;

	
	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("ДлительностьРаботыНачалоВыбораИзСпискаЗавершение", ЭтотОбъект), СписокВыбора, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ДлительностьРаботыНачалоВыбораИзСпискаЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	ВыбранноеЗначение = ВыбранныйЭлемент;
	Если ВыбранноеЗначение = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	ДлительностьРаботы = ВыбранноеЗначение.Значение;
	ПосчитатьДлительностьВЧас();

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СписокВыбораВремени()
	
	СписокВыбора = Новый СписокЗначений;
	
	СписокВыбора.Добавить("00:15");
	СписокВыбора.Добавить("00:30");
	СписокВыбора.Добавить("00:45");
	СписокВыбора.Добавить("01:00");
	СписокВыбора.Добавить("01:30");
	СписокВыбора.Добавить("02:00");
	СписокВыбора.Добавить("03:00");
	СписокВыбора.Добавить("04:00");
	СписокВыбора.Добавить("05:00");
	
	Возврат СписокВыбора;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СписокВыбораВремениДня()
	
	СписокВыбора = Новый СписокЗначений;
	
	ВремяНачала = 8*3600;
	ВремяОкончания = 22*3600;
	ДатаНачала = Дата(1,1,1)+ ВремяНачала;
	ДатаОкончания = Дата(1,1,1)+ ВремяОкончания;
	Интервал = 30*60;
	
	Пока ДатаНачала <= ДатаОкончания Цикл
		СписокВыбора.Добавить(ДатаНачала,Формат(ДатаНачала,"ДФ=ЧЧ:мм"));
		ДатаНачала = ДатаНачала + Интервал; 
	КонецЦикла;	
	Возврат СписокВыбора;
	
КонецФункции
	
&НаКлиенте
Процедура ПроектЗадачаАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = РаботаСПроектами.СформироватьДанныеВыбораПроектаЗадачи(Текст);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроектЗадачаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		ДанныеВыбораПроектаЗадачи = РаботаСПроектами.СформироватьДанныеВыбораПроектаЗадачи(Текст);
		
		Если ДанныеВыбораПроектаЗадачи.Количество() = 1 Тогда 
			ВыбранноеЗначение = ДанныеВыбораПроектаЗадачи[0].Значение;
			
			Запись.Проект = ВыбранноеЗначение.Проект;
			Запись.ПроектнаяЗадача = ВыбранноеЗначение.ПроектнаяЗадача;
			ПроектЗадача = РаботасПроектамиКлиентСервер.ПредставлениеПроектаЗадачи(Запись.Проект, Запись.ПроектнаяЗадача);
		Иначе	
			СтандартнаяОбработка = Ложь;
			ДанныеВыбора = ДанныеВыбораПроектаЗадачи;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРольИсполнителя(Исполнитель,ТекПроект,ТекПроектЗадача,Дата)
	Если Не ЗначениеЗаполнено(ТекПроект) Тогда
		Возврат;
	КонецЕсли;

	ТаблицаИсполнителей = РаботаСЗаявками.ПолучитьПроектнуюКоманду(ТекПроект,ТекПроектЗадача,Дата);

	СтрокаТабл = ТаблицаИсполнителей.Найти(Исполнитель,"Пользователь");
	
	Если СтрокаТабл <> Неопределено Тогда
		РольПользователя = СтрокаТабл.Роль;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РольПользователяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	ДанныеВыбора = РаботаСЗаявками.СформироватьДанныеВыбораИсполнителя(Запись.Проект,Запись.ПроектнаяЗадача,Истина,Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокВыбора = СписокВыбораВремениДня();
	
	ВыбранноеЗначение = Неопределено;

	
	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("ОкончаниеНачалоВыбораИзСпискаЗавершение", ЭтотОбъект), СписокВыбора, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеНачалоВыбораИзСпискаЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	ВыбранноеЗначение = ВыбранныйЭлемент;
	Если ВыбранноеЗначение = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	Запись.Окончание = ВыбранноеЗначение.Значение;
	ПосчитатьДлительностьВЧас();

КонецПроцедуры

&НаКлиенте
Процедура НачалоНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокВыбора = СписокВыбораВремениДня();
	
	ВыбранноеЗначение = Неопределено;

	
	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("НачалоНачалоВыбораИзСпискаЗавершение", ЭтотОбъект), СписокВыбора, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура НачалоНачалоВыбораИзСпискаЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	ВыбранноеЗначение = ВыбранныйЭлемент;
	Если ВыбранноеЗначение = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	Запись.Начало = ВыбранноеЗначение.Значение;
	ПосчитатьДлительностьВЧас();

КонецПроцедуры

&НаКлиенте
Процедура НачалоПриИзменении(Элемент)
	ПосчитатьДлительностьВЧас();
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеПриИзменении(Элемент)
	ПосчитатьДлительностьВЧас();
КонецПроцедуры

&НаКлиенте
Процедура ДлительностьРаботыПриИзменении(Элемент)
	  ПосчитатьДлительностьВЧас();
КонецПроцедуры

&НаКлиенте
Процедура ПосчитатьДлительностьВЧас()
	Если СпособУказанияВремени = ПредопределенноеЗначение("Перечисление.СпособыУказанияВремени.Длительность") Тогда 
		ДлительностьЧас = УчетВремениКлиентСервер.ЧислоИзСтроки(ДлительностьРаботы)/3600;
	ИначеЕсли ЗначениеЗаполнено(Запись.Начало) И ЗначениеЗаполнено(Запись.Окончание) Тогда 
		ДлительностьЧас = (Запись.Окончание - Запись.Начало)/3600;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПосчитатьДлительностьВЧас();
КонецПроцедуры

&НаКлиенте
Процедура ПроектЗадачаПриИзменении(Элемент)
	ЗаполнитьРольИсполнителя(Запись.Пользователь,Запись.Проект,Запись.ПроектнаяЗадача,Запись.ДатаДобавления);
КонецПроцедуры
