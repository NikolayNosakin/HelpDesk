
//////////////////////////////////////////////////////////////////////////////// 
// ПРОЦЕДУРЫ И ФУНКЦИИ 
// 

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьТип(Значение)
	
	Если ТипЗнч(Значение) = Тип("Строка") Тогда 
		ИмяТипа = "Строка";
	ИначеЕсли ТипЗнч(Значение) = Тип("СправочникСсылка.Файлы") Тогда
		ИмяТипа = "СправочникСсылка.Файлы";
	ИначеЕсли ВстроеннаяПочтаКлиентСервер.ЭтоВходящееПисьмо(Значение) Тогда
		ИмяТипа = "ДокументСсылка.ВходящееПисьмо";
	ИначеЕсли ВстроеннаяПочтаКлиентСервер.ЭтоИсходящееПисьмо(Значение) Тогда
		ИмяТипа = "ДокументСсылка.ИсходящееПисьмо";
	Иначе	
		ИмяТипа = "";
	КонецЕсли;
	
	Возврат ИмяТипа;
	
КонецФункции

&НаСервере
Функция НайтиЗаписьОбратнойСвязи()
	
	Если Не ЗначениеЗаполнено(Запись.ТипОбратнойСвязи) Тогда 
		Возврат Неопределено;
	КонецЕсли;	
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ИСТИНА 
	|ИЗ
	|	РегистрСведений.НастройкаСвязей КАК НастройкаСвязей
	|ГДЕ
	|	НастройкаСвязей.ТипСвязи = &ТипСвязи
	|	И НастройкаСвязей.СсылкаИз = &СсылкаИз
	|	И НастройкаСвязей.СсылкаНа = &СсылкаНа");
	
	Запрос.УстановитьПараметр("ТипСвязи", Запись.ТипОбратнойСвязи);
	Запрос.УстановитьПараметр("СсылкаИз", Запись.СсылкаНа);
	Запрос.УстановитьПараметр("СсылкаНа", Запись.СсылкаИз);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	ЗначенияКлюча = Новый Структура("ТипСвязи, СсылкаИз, СсылкаНа",
		Запись.ТипОбратнойСвязи,
		Запись.СсылкаНа,
		Запись.СсылкаИз);
			
	Возврат РегистрыСведений.НастройкаСвязей.СоздатьКлючЗаписи(ЗначенияКлюча);
	
КонецФункции


//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
// 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаписьОбратнойСвязи = Неопределено;
	
	Если ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ЗаписьОбратнойСвязи = НайтиЗаписьОбратнойСвязи();
	ИначеЕсли Не ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда 
		Если Параметры.Свойство("СсылкаИз") Тогда 
			Запись.СсылкаИз = Параметры.СсылкаИз;
		КонецЕсли;
		Если Параметры.Свойство("СсылкаНа") Тогда 
			Запись.СсылкаНа = Параметры.СсылкаНа;
		КонецЕсли;
	КонецЕсли;	
	
	ТипСсылкаИз = ПолучитьТип(Запись.СсылкаИз);
	Если Не ЗначениеЗаполнено(ТипСсылкаИз) Тогда 
		Элементы.СсылкаИз.ТолькоПросмотр = Истина;
	ИначеЕсли ТипСсылкаИз = "СправочникСсылка.Файлы" 
		Или ТипСсылкаИз = "ДокументСсылка.ВходящееПисьмо"
		Или ТипСсылкаИз = "ДокументСсылка.ИсходящееПисьмо" Тогда 
		Элементы.СсылкаИз.ТолькоПросмотр = Истина;
	КонецЕсли;	
	
	ТипСсылкаНа = ПолучитьТип(Запись.СсылкаНа);
	Если Не ЗначениеЗаполнено(ТипСсылкаНа) Тогда 
		Элементы.СсылкаНа.ТолькоПросмотр = Истина;
	ИначеЕсли ТипСсылкаНа = "СправочникСсылка.Файлы"
		Или ТипСсылкаНа = "ДокументСсылка.ВходящееПисьмо"
		Или ТипСсылкаНа = "ДокументСсылка.ИсходящееПисьмо" Тогда 	
		Элементы.СсылкаНа.ТолькоПросмотр = Истина;
	ИначеЕсли ТипСсылкаНа = "Строка" Тогда 
		Элементы.СсылкаНа.ТолькоПросмотр = Истина;
		Элементы.ТипОбратнойСвязи.ТолькоПросмотр = Истина;
		Элементы.ХарактерОбратнойСвязи.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если Запись.Предопределенная Тогда 
		ТолькоПросмотр = Истина;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Запись.Предопределенная Тогда 
		ПоказатьПредупреждение(Неопределено, "Предопределенная настройка связей доступна только для просмотра");
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗаписьОбратнойСвязи = Неопределено Тогда 
		Если ЗначениеЗаполнено(Запись.ТипОбратнойСвязи) Тогда 
			МенеджерЗаписи = РегистрыСведений.НастройкаСвязей.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.ТипСвязи = Запись.ТипОбратнойСвязи;
			МенеджерЗаписи.СсылкаИз = Запись.СсылкаНа;
			МенеджерЗаписи.СсылкаНа = Запись.СсылкаИз;
			МенеджерЗаписи.ХарактерСвязи = Запись.ХарактерОбратнойСвязи;
			МенеджерЗаписи.ТипОбратнойСвязи = Запись.ТипСвязи;
			МенеджерЗаписи.ХарактерОбратнойСвязи = Запись.ХарактерСвязи;
			МенеджерЗаписи.Записать();
			
			ЗаписьОбратнойСвязи = РегистрыСведений.НастройкаСвязей.СоздатьКлючЗаписи(
				Новый Структура("ТипСвязи, СсылкаИз, СсылкаНа", МенеджерЗаписи.ТипСвязи, МенеджерЗаписи.СсылкаИз, МенеджерЗаписи.СсылкаНа));
		КонецЕсли;	
	Иначе	
		Если ЗначениеЗаполнено(Запись.ТипОбратнойСвязи) Тогда 
			МенеджерЗаписи = РегистрыСведений.НастройкаСвязей.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.ТипСвязи = ЗаписьОбратнойСвязи.ТипСвязи;
			МенеджерЗаписи.СсылкаИз = ЗаписьОбратнойСвязи.СсылкаИз;
			МенеджерЗаписи.СсылкаНа = ЗаписьОбратнойСвязи.СсылкаНа;
			МенеджерЗаписи.Прочитать();
			
			МенеджерЗаписи.ТипСвязи = Запись.ТипОбратнойСвязи;
			МенеджерЗаписи.СсылкаИз = Запись.СсылкаНа;
			МенеджерЗаписи.СсылкаНа = Запись.СсылкаИз;
			МенеджерЗаписи.ХарактерСвязи = Запись.ХарактерОбратнойСвязи;
			МенеджерЗаписи.ТипОбратнойСвязи = Запись.ТипСвязи;
			МенеджерЗаписи.ХарактерОбратнойСвязи = Запись.ХарактерСвязи;
			МенеджерЗаписи.Записать();
			
			ЗаписьОбратнойСвязи = РегистрыСведений.НастройкаСвязей.СоздатьКлючЗаписи(
				Новый Структура("ТипСвязи, СсылкаИз, СсылкаНа", МенеджерЗаписи.ТипСвязи, МенеджерЗаписи.СсылкаИз, МенеджерЗаписи.СсылкаНа));
		Иначе	
			МенеджерЗаписи = РегистрыСведений.НастройкаСвязей.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.ТипСвязи = ЗаписьОбратнойСвязи.ТипСвязи;
			МенеджерЗаписи.СсылкаИз = ЗаписьОбратнойСвязи.СсылкаИз;
			МенеджерЗаписи.СсылкаНа = ЗаписьОбратнойСвязи.СсылкаНа;
			МенеджерЗаписи.Удалить();
			
			ЗаписьОбратнойСвязи = Неопределено;
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ЗначениеЗаполнено(Запись.ТипОбратнойСвязи) И Не ЗначениеЗаполнено(Запись.ХарактерОбратнойСвязи) Тогда 
		ТекстСообщения = НСтр("ru = 'Поле ""Характер обратной связи"" не заполнено'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Запись.ХарактерОбратнойСвязи",,Отказ);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Запись.ХарактерОбратнойСвязи) И Не ЗначениеЗаполнено(Запись.ТипОбратнойСвязи) Тогда 
		ТекстСообщения = НСтр("ru = 'Поле ""Тип обратной связи"" не заполнено'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Запись.ТипОбратнойСвязи",, Отказ);
	КонецЕсли;
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
// 

&НаКлиенте
Процедура ТипСсылкаИзПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(ТипСсылкаИз) Тогда
		Запись.СсылкаИз = Неопределено;
	ИначеЕсли ТипСсылкаИз <> ПолучитьТип(Запись.СсылкаИз) Тогда
		Запись.СсылкаИз = Новый(ТипСсылкаИз);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТипСсылкаИз) Тогда
		Элементы.СсылкаИз.ТолькоПросмотр = Истина;
	ИначеЕсли ТипСсылкаИз = "СправочникСсылка.Файлы"
		Или ТипСсылкаИз = "ДокументСсылка.ВходящееПисьмо"
		Или ТипСсылкаИз = "ДокументСсылка.ИсходящееПисьмо" Тогда
		Элементы.СсылкаИз.ТолькоПросмотр = Истина;
	Иначе
		Элементы.СсылкаИз.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипСсылкаНаПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(ТипСсылкаНа) Тогда 
		Запись.СсылкаНа = Неопределено;
	ИначеЕсли ТипСсылкаНа <> ПолучитьТип(Запись.СсылкаНа) Тогда 
		Запись.СсылкаНа = ?(ТипСсылкаНа = "Строка", "", Новый(ТипСсылкаНа));
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(ТипСсылкаНа) Тогда 
		Элементы.СсылкаНа.ТолькоПросмотр = Истина;
	ИначеЕсли ТипСсылкаНа = "Строка" Тогда 
		Элементы.СсылкаНа.ТолькоПросмотр = Истина;
		
		Если ЗначениеЗаполнено(Запись.ТипОбратнойСвязи) Тогда 
			Запись.ТипОбратнойСвязи = Неопределено;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Запись.ХарактерОбратнойСвязи) Тогда 
			Запись.ХарактерОбратнойСвязи = Неопределено;
		КонецЕсли;
		
		Элементы.ТипОбратнойСвязи.ТолькоПросмотр = Истина;
		Элементы.ХарактерОбратнойСвязи.ТолькоПросмотр = Истина;
		
	ИначеЕсли ТипСсылкаНа = "СправочникСсылка.Файлы"
		Или ТипСсылкаНа = "ДокументСсылка.ВходящееПисьмо"
		Или ТипСсылкаНа = "ДокументСсылка.ИсходящееПисьмо" Тогда 
		
		Элементы.СсылкаНа.ТолькоПросмотр = Истина;
		
		Элементы.ТипОбратнойСвязи.ТолькоПросмотр = Ложь;
		Элементы.ХарактерОбратнойСвязи.ТолькоПросмотр = Ложь;
	Иначе
		Элементы.СсылкаНа.ТолькоПросмотр = Ложь;
		Элементы.ТипОбратнойСвязи.ТолькоПросмотр = Ложь;
		Элементы.ХарактерОбратнойСвязи.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипОбратнойСвязиПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(Запись.ТипОбратнойСвязи) Тогда 
		Запись.ХарактерОбратнойСвязи = Неопределено;
	КонецЕсли;	
	
КонецПроцедуры
