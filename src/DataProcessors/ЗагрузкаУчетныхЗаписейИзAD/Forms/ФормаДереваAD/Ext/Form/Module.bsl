
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДеревоADОбъект = РеквизитФормыВЗначение("ДеревоAD");	
	ЗаполнитьДеревоAD(ДеревоADОбъект);
	ЗначениеВРеквизитФормы(ДеревоADОбъект, "ДеревоAD");
	
	ЭтаФорма.ЗакрыватьПриВыборе = Истина;
	ЭтаФорма.ЗакрыватьПриЗакрытииВладельца = Истина;
	
	Элементы.ДеревоAD.ТекущаяСтрока = НайтиСтрокуДереваПоАдресуLDAP(Параметры.LDAPText, ДеревоAD.ПолучитьЭлементы());

КонецПроцедуры

&НаКлиенте
Процедура ДеревоADВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОповеститьОВыборе(Элементы.ДеревоAD.ТекущиеДанные.Path);

КонецПроцедуры


&НаСервере
Процедура ЗаполнитьДеревоAD(ДеревоADОбъект) Экспорт
	
	#Если Клиент Тогда
	Сообщить("Формирование дерева Active Directory...");
	#КонецЕсли

	ДеревоADОбъект.Строки.Очистить();
	
	DSE = ПолучитьCOMОбъект("LDAP://rootDSE"); 
	LDAP_DNC  = DSE.Get("defaultNamingContext");
	LDAPText = "LDAP://" + LDAP_DNC;

	ОписаниеОшибок = "";
	
	conn = Неопределено;
	
	ДанныеПолучены = Ложь;
	//сначала пробуем получить данные из глобального каталога GC
	rs = ПолучитьВыборкуLDAP("<" + "GC://" + LDAP_DNC + ">;(objectClass=domain);ADsPath, Name, distinguishedName;subtree", conn, ОписаниеОшибок);
	Попытка //используем попытку, т.к. бывает ошибка при получении свойства RecordCount при получении пустого набора
		Если rs <> Неопределено
			И Не rs.EOF 
			И Не rs.RecordCount = 0 Тогда
			ДанныеПолучены = Истина;
		КонецЕсли;
	Исключение
	КонецПопытки;
	
	Если Не ДанныеПолучены Тогда
		//пробуем получить данные из каталога LDAP
		rs = ПолучитьВыборкуLDAP("<" + "LDAP://" + LDAP_DNC + ">;(objectClass=domain);ADsPath, Name, distinguishedName;subtree", conn, ОписаниеОшибок);
		Попытка //используем попытку, т.к. бывает ошибка при получении свойства RecordCount при получении пустого набора
			Если rs <> Неопределено
				И Не rs.EOF 
				И Не rs.RecordCount = 0 Тогда 
				ДанныеПолучены = Истина;
			КонецЕсли;
		Исключение
		КонецПопытки;
	КонецЕсли;

	Если ДанныеПолучены Тогда 
		Пока Не rs.EOF Цикл  
			
			НоваяСтрока = ДеревоADОбъект.Строки.Добавить();
			
			НоваяСтрока.Name			 = rs.Fields("Name").Value;
			НоваяСтрока.Path		 = rs.Fields("ADsPath").Value;  //берем путь "как есть"
			
			ДобавитьВетвьВДеревоAD(conn, НоваяСтрока, ОписаниеОшибок);
			
			rs.MoveNext();
			
		КонецЦикла;
	КонецЕсли;
	
	Если Не ПустаяСтрока(ОписаниеОшибок) Тогда      
		Сообщить(ОписаниеОшибок, СтатусСообщения.Важное);
	КонецЕсли;
	
	Если rs <> Неопределено Тогда
		rs.Close();             
		rs = Неопределено;
	КонецЕсли;

	conn.Close();
	conn = Неопределено;
		
	#Если Клиент Тогда
	Состояние();
	#КонецЕсли

КонецПроцедуры

&НаСервере
Процедура ДобавитьВетвьВДеревоAD(conn, СтрокаДерева, СтатусФормированияДерева = "")
	
	#Если Клиент Тогда
	ОбработкаПрерыванияПользователя();
	Сообщить("Ожидайте загрузки списка доменов.....Обрабатывается ветка " + СтрокаДерева.path);
	#КонецЕсли
	
	
	rs = ПолучитьВыборкуLDAP("<" + СтрокаДерева.Path + ">;(objectClass=organizationalUnit);ADsPath, Name, distinguishedName;onelevel", conn, СтатусФормированияДерева);
	Если rs = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если rs.RecordCount > 0 Тогда 
		
		Пока Не rs.EOF Цикл
			
			НоваяСтрока = СтрокаДерева.Строки.Добавить();
			
			НоваяСтрока.Path		 = rs.Fields("ADsPath").Value;
			НоваяСтрока.Name		 = rs.Fields("Name").Value;
						
			ДобавитьВетвьВДеревоAD(conn, НоваяСтрока, СтатусФормированияДерева);
			
			rs.MoveNext();
			
		КонецЦикла;
		
		СтрокаДерева.Строки.Сортировать("Name");
		
	КонецЕсли;
	
	rs.Close();
	rs = Неопределено;

КонецПроцедуры //ДобавитьВетвьВДеревоAD

&НаСервере
Функция НайтиСтрокуДереваПоАдресуLDAP(АдресLDAP, ЭлементыДерева)
	Для Каждого ЭлементДерева Из ЭлементыДерева Цикл
		Если ЭлементДерева.Path = АдресLDAP Тогда
			Возврат ЭлементДерева.ПолучитьИдентификатор();
		Иначе
			ИдентификаторНайденногоЭлемента = НайтиСтрокуДереваПоАдресуLDAP(АдресLDAP, ЭлементДерева.ПолучитьЭлементы());
			Если ЗначениеЗаполнено(ИдентификаторНайденногоЭлемента) Тогда
				Возврат ИдентификаторНайденногоЭлемента;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат Неопределено;
КонецФункции

&НаСервере
Функция ПолучитьВыборкуLDAP(ТекстЗапросаLDAP, conn = Неопределено, ОписаниеОшибок = "")
	
	Попытка 
		Если conn = Неопределено Тогда
			conn = СоздатьПодключениеКAD(ОписаниеОшибок);
			Если conn = Неопределено Тогда
				Возврат Неопределено;
			КонецЕсли;
		КонецЕсли;

		cmd = Новый COMОбъект("ADODB.Command");
		cmd.ActiveConnection = conn;
		cmd.Properties("Page Size").Value = 100;
		cmd.Properties("Cache Results").Value = True;
		cmd.CommandText = ТекстЗапросаLDAP;
		
		Возврат cmd.Execute();
		
	Исключение
		
		ОписаниеОшибок = "Не удалось выполнить LDAP запрос!";
		
	КонецПопытки;

	Возврат Неопределено;
	
КонецФункции

&НаСервере
Функция СоздатьПодключениеКAD(ОписаниеОшибок = "")
	
	ПодключениеКAD = Неопределено;
	
	Попытка
		ПодключениеКAD = Новый COMОбъект("ADODB.Connection");
		ПодключениеКAD.Provider = "ADSDSOObject";
		//If the cursorLocation property of the Connection object is adUseClient, then the default
		//cursorType of any Recordset object using this Connection object will be adOpenStatic. 
		//This allows us to declare an ADO Command object, assign values to the Command object properties like "Page Size",
		//and use the Execute method of the Command object to create the recordset. 
		//This is necessary if you need a cursor that allows movement forward and backward and you need to retrieve more than 1000 rows.
		ПодключениеКAD.cursorLocation = 3; //adUseClient
		ПодключениеКAD.Open("ADs Provider");
	Исключение
		ПодключениеКAD = Неопределено;
		ОписаниеОшибок = "Не удалось создать подключение к Active Directory!";
	КонецПопытки;
	
	Возврат ПодключениеКAD;
	
КонецФункции

