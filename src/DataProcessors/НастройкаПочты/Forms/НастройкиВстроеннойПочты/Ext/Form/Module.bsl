&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	АвтовыборКодировкиИсходящихПисем =
		ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"ВстроеннаяПочта",
			"АвтовыборКодировкиИсходящихПисем",
			Истина);
	
	КодировкаИсходящихПисем =
		ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"ВстроеннаяПочта",
			"КодировкаИсходящихПисем",
			"");
	
	ПодписьДляНовыхПисем =
		ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"ВстроеннаяПочта",
			"ПодписьДляНовыхПисем",
			Неопределено);
	
	ПодписьПриОтветеИПересылке =
		ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"ВстроеннаяПочта",
			"ПодписьПриОтветеИПересылке",
			Неопределено);
	
	ОсновнаяУчетнаяЗапись =
		ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"ВстроеннаяПочта",
			"ОсновнаяУчетнаяЗапись",
			Неопределено);
		
	ВставлятьТекстИсходногоПисьмаПриОтвете =
		ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"ВстроеннаяПочта",
			"ВставлятьТекстИсходногоПисьмаПриОтвете",
			Истина);
	
	ОсновнойФлаг =
		ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"ВстроеннаяПочта",
			"ОсновнойФлаг",
			Перечисления.ФлагиПисем.Красный);
	
	ОбновитьПараметрыУсловногоОформления();
	
	Для каждого КодировкаЭлемент Из РаботаСоСтроками.ПолучитьСписокКодировок() Цикл
		Элементы.КодировкаИсходящихПисем.СписокВыбора.Добавить(
			КодировкаЭлемент.Значение,
			КодировкаЭлемент.Представление);
	КонецЦикла;
	
	Задержка = РегистрыСведений.НастройкиОтложеннойОтправкиПисем.ПолучитьНастройку(ТекущийПользователь);
	ИспользоватьОтложеннуюОтправкуПисем = (Задержка > 0);
	Если ИспользоватьОтложеннуюОтправкуПисем Тогда
		Элементы.Задержка.Доступность = Истина;
		Элементы.НадписьСекунд.Доступность = Истина;
	Иначе
		Элементы.Задержка.Доступность = Ложь;
		Элементы.НадписьСекунд.Доступность = Ложь;
	КонецЕсли;
	
	ОтобразитьФлаг();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПараметрыУсловногоОформления()
	
	ЭтотОбъект.УсловноеОформление.Элементы[0].Отбор.Элементы[0].ПравоеЗначение = ОсновнаяУчетнаяЗапись;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	
	МассивСтруктур = Новый Массив;
	
	ДобавитьСтруктуруНастройки(
		МассивСтруктур,
		"ВстроеннаяПочта",
		"АвтовыборКодировкиИсходящихПисем",
		АвтовыборКодировкиИсходящихПисем);
		
	ДобавитьСтруктуруНастройки(
		МассивСтруктур,
		"ВстроеннаяПочта",
		"КодировкаИсходящихПисем",
		КодировкаИсходящихПисем);
	
	ДобавитьСтруктуруНастройки(
		МассивСтруктур,
		"ВстроеннаяПочта",
		"ПодписьДляНовыхПисем",
		ПодписьДляНовыхПисем);
	
	ДобавитьСтруктуруНастройки(
		МассивСтруктур,
		"ВстроеннаяПочта",
		"ПодписьПриОтветеИПересылке",
		ПодписьПриОтветеИПересылке);
	
	ДобавитьСтруктуруНастройки(
		МассивСтруктур,
		"ВстроеннаяПочта",
		"ВставлятьТекстИсходногоПисьмаПриОтвете",
		ВставлятьТекстИсходногоПисьмаПриОтвете);
		
	ДобавитьСтруктуруНастройки(
		МассивСтруктур,
		"ВстроеннаяПочта",
		"ОсновнойФлаг",
		ОсновнойФлаг);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранитьМассив(МассивСтруктур);
	
	РегистрыСведений.НастройкиОтложеннойОтправкиПисем.СохранитьНастройку(ТекущийПользователь, Задержка);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтруктуруНастройки(МассивСтруктур, Объект, Настройка = Неопределено, Значение)
	
	МассивСтруктур.Добавить(Новый Структура ("Объект, Настройка, Значение", Объект, Настройка, Значение));
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	СохранитьНастройки();
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновнаяУчетнаяЗапись(Команда)
	
	Если Элементы.УчетныеЗаписи.ТекущиеДанные = Неопределено Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Не выбрана учетная запись'"));
		Возврат;
	КонецЕсли;
	
	Если ОсновнаяУчетнаяЗапись = Элементы.УчетныеЗаписи.ТекущиеДанные.Ссылка Тогда
		ОсновнаяУчетнаяЗапись = Неопределено;
	Иначе
		ОсновнаяУчетнаяЗапись = Элементы.УчетныеЗаписи.ТекущиеДанные.Ссылка;
	КонецЕсли;
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
		"ВстроеннаяПочта",
		"ОсновнаяУчетнаяЗапись",
		ОсновнаяУчетнаяЗапись);
	
	Элементы.ОсновнаяУчетнаяЗапись.Пометка =
		(Элементы.УчетныеЗаписи.ТекущиеДанные.Ссылка = ОсновнаяУчетнаяЗапись);
	
	ОбновитьПараметрыУсловногоОформления();
	
КонецПроцедуры

&НаКлиенте
Процедура УчетныеЗаписиПриАктивизацииСтроки(Элемент)
	
	Если Не ЗначениеЗаполнено(Элементы.УчетныеЗаписи.ТекущаяСтрока) Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ОсновнаяУчетнаяЗапись.Пометка =
		(Элементы.УчетныеЗаписи.ТекущиеДанные.Ссылка = ОсновнаяУчетнаяЗапись);
	
КонецПроцедуры

&НаКлиенте
Процедура Подписи(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Владелец", Пользователи.ТекущийПользователь());
	ОткрытьФорму("Справочник.ПодписиПисемПользователей.ФормаСписка", ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтложеннуюОтправкуПисемПриИзменении(Элемент)
	
	Если ИспользоватьОтложеннуюОтправкуПисем Тогда
		Элементы.Задержка.Доступность = Истина;
		Элементы.НадписьСекунд.Доступность = Истина;
	Иначе
		Задержка = 0;
		Элементы.Задержка.Доступность = Ложь;
		Элементы.НадписьСекунд.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// РАБОТА С ФЛАГАМИ

&НаКлиенте
Процедура КрасныйФлаг(Команда)
	
	ОсновнойФлаг = ПредопределенноеЗначение("Перечисление.ФлагиПисем.Красный");
	Элементы.ПодменюФлаги.Картинка = БиблиотекаКартинок.КрасныйФлаг;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СинийФлаг(Команда)
	
	ОсновнойФлаг = ПредопределенноеЗначение("Перечисление.ФлагиПисем.Синий");
	Элементы.ПодменюФлаги.Картинка = БиблиотекаКартинок.СинийФлаг;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ЖелтыйФлаг(Команда)
	
	ОсновнойФлаг = ПредопределенноеЗначение("Перечисление.ФлагиПисем.Желтый");
	Элементы.ПодменюФлаги.Картинка = БиблиотекаКартинок.ЖелтыйФлаг;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗеленыйФлаг(Команда)
	
	ОсновнойФлаг = ПредопределенноеЗначение("Перечисление.ФлагиПисем.Зеленый");
	Элементы.ПодменюФлаги.Картинка = БиблиотекаКартинок.ЗеленыйФлаг;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОранжевыйФлаг(Команда)
	
	ОсновнойФлаг = ПредопределенноеЗначение("Перечисление.ФлагиПисем.Оранжевый");
	Элементы.ПодменюФлаги.Картинка = БиблиотекаКартинок.ОранжевыйФлаг;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ЛиловыйФлаг(Команда)
	
	ОсновнойФлаг = ПредопределенноеЗначение("Перечисление.ФлагиПисем.Лиловый");
	Элементы.ПодменюФлаги.Картинка = БиблиотекаКартинок.ЛиловыйФлаг;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьФлаг()
	
	Если ОсновнойФлаг = Перечисления.ФлагиПисем.ПустаяСсылка() Тогда
		Элементы.ПодменюФлаги.Картинка = БиблиотекаКартинок.ПустойФлаг;
	ИначеЕсли ОсновнойФлаг = Перечисления.ФлагиПисем.Красный Тогда
		Элементы.ПодменюФлаги.Картинка = БиблиотекаКартинок.КрасныйФлаг;
	ИначеЕсли ОсновнойФлаг = Перечисления.ФлагиПисем.Синий Тогда
		Элементы.ПодменюФлаги.Картинка = БиблиотекаКартинок.СинийФлаг;
	ИначеЕсли ОсновнойФлаг = Перечисления.ФлагиПисем.Желтый Тогда
		Элементы.ПодменюФлаги.Картинка = БиблиотекаКартинок.ЖелтыйФлаг;
	ИначеЕсли ОсновнойФлаг = Перечисления.ФлагиПисем.Зеленый Тогда
		Элементы.ПодменюФлаги.Картинка = БиблиотекаКартинок.ЗеленыйФлаг;
	ИначеЕсли ОсновнойФлаг = Перечисления.ФлагиПисем.Оранжевый Тогда
		Элементы.ПодменюФлаги.Картинка = БиблиотекаКартинок.ОранжевыйФлаг;
	ИначеЕсли ОсновнойФлаг = Перечисления.ФлагиПисем.Лиловый Тогда
		Элементы.ПодменюФлаги.Картинка = БиблиотекаКартинок.ЛиловыйФлаг;
	КонецЕсли;
	
КонецПроцедуры
