////////////////////////////////////////////////////////////////////////////////
// События формы
////////////////////////////////////////////////////////////////////////////////

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Подсистемы           = Параметры.Подсистемы;
	ИмяФормыОтчетов      = Параметры.ИмяФормы;
	КартинкаФормы        = Параметры.КартинкаФормы;
	ГруппироватьВарианты = истина;
    	
	Заголовок = Параметры.ИмяФормы;
	Если Параметры.КартинкаФормы <> "" тогда 
		Элементы.КартинкаОтчета.Картинка = БиблиотекаКартинок[Параметры.КартинкаФормы];
		Элементы.КартинкаОтчета.Видимость = истина;
	КонецЕсли;
	
	Если ТипЗнч(Параметры.Подсистемы) = Тип("СписокЗначений") тогда
		ПутиПодсистемы = Параметры.Подсистемы;
	Иначе
		ПутиПодсистемы = Новый СписокЗначений;
		ПутиПодсистемы.Добавить(Параметры.Подсистемы);
	КонецЕсли;
	
	ОбновитьПанельОтчетов(Отказ);
	
КонецПроцедуры           

////////////////////////////////////////////////////////////////////////////////
// Контекстные вызовы сервера
////////////////////////////////////////////////////////////////////////////////

&НаСервере
Процедура ОбновитьПанельОтчетов(Отказ = ложь)
	
	МассивЭлементов = Новый Массив;

	Для каждого ЭлементГруппыСсылка из Элементы.ГруппаОсновная.ПодчиненныеЭлементы Цикл
		Если ЭлементГруппыСсылка.Имя = "КартинкаОтчета" тогда
			Продолжить;
		КонецЕсли;
		МассивЭлементов.Добавить(ЭлементГруппыСсылка);
	КонецЦикла;
	
	Для каждого ЭлементГруппыСсылка из Элементы.ГруппаСмТакжеСпискиОтчетов.ПодчиненныеЭлементы Цикл
		МассивЭлементов.Добавить(ЭлементГруппыСсылка);
	КонецЦикла;
	
	Для каждого ЭлементГруппыСсылка из МассивЭлементов Цикл
		Элементы.Удалить(ЭлементГруппыСсылка);		
	КонецЦикла;
	
	МассивКоманд = Новый Массив;
	
	Для каждого Команда из Команды Цикл
		Если Команда.Имя = "ОбщийСписокВариантовОтчетов" тогда
			Продолжить;
		КонецЕсли;
		МассивКоманд.Добавить(Команда);
	КонецЦикла;
	
	Для каждого Команда из МассивКоманд Цикл
		Команды.Удалить(Команда);
	КонецЦикла;
	
	СписокОтчетов = ВариантыОтчетовПереопределяемый.СписокОтчетовПоддерживаемыхПодсистемой();
	
	ДеревоПодсистем = Новый ДеревоЗначений;
	ДеревоПодсистем.Колонки.Добавить("Подсистема");
	ДеревоПодсистем.Колонки.Добавить("Название");
	
	СписокПодсистем = ВариантыОтчетов.ПолучитьСписокПодсистем(ПутиПодсистемы, ДеревоПодсистем);
	Если СписокПодсистем.Количество() = 0 тогда
		ВызватьИсключение НСТр("ru = 'Некорректное значение параметра формы Подсистемы.'");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	МаксимальнаяДлинна = 0;
	
	Для каждого ЭлементСпПодсистема из СписокПодсистем Цикл
		МаксимальнаяДлинна = Макс(СтрДлина(ЭлементСпПодсистема.Значение), МаксимальнаяДлинна);
	КонецЦикла;
	
	
	// Получить варианты отчетов с разделами 
	ТЗ = "ВЫБРАТЬ
	|	ВариантыОтчетов.КлючОбъекта + ""\"" + ВариантыОтчетов.КлючВарианта КАК Ключ,
	|	ВариантыОтчетов.Наименование КАК Представление,
	|	ВариантыОтчетов.Описание,
	|	ВариантыОтчетов.БыстрыйДоступ,
	|	ВариантыОтчетов.Наименование КАК Сортировка,
	|	ВариантыОтчетов.ТипВариантаОтчета,
	|	ВариантыОтчетовПодсистемы.Подсистема
	|ИЗ
	|	Справочник.ВариантыОтчетов.Подсистемы КАК ВариантыОтчетовПодсистемы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыОтчетов КАК ВариантыОтчетов
	|		ПО ВариантыОтчетовПодсистемы.Ссылка = ВариантыОтчетов.Ссылка
	|ГДЕ
	|	(НЕ ВариантыОтчетов.ПометкаУдаления)
	|	И ВЫРАЗИТЬ(ВариантыОтчетовПодсистемы.Подсистема КАК Строка("+Формат(МаксимальнаяДлинна, "ЧГ=0")+"))В (&Подсистемы)
	|	И ВариантыОтчетов.КлючОбъекта В (&СписокОтчетов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сортировка";
	
	Запрос = Новый Запрос(ТЗ);
	Запрос.УстановитьПараметр("Подсистемы",       СписокПодсистем);
	Запрос.УстановитьПараметр("СписокОтчетов", СписокОтчетов);
	УстановитьПривилегированныйРежим(истина);
	ТаблицаВариантов = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(ложь);

	// роли вариантов
	ТЗ = "ВЫБРАТЬ
	|	ВариантыОтчетов.КлючОбъекта + ""\"" + ВариантыОтчетов.КлючВарианта КАК Ключ,
	|	ИсключенныеПользователи.Пользователь КАК Пользователь,
	|	НЕ ИсключенныеПользователи.Ссылка.БыстрыйДоступ КАК БыстрыйДоступ
	|ИЗ
	|	Справочник.ВариантыОтчетов КАК ВариантыОтчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыОтчетов.ИсключенияБыстрогоДоступа КАК ИсключенныеПользователи
	|		ПО ВариантыОтчетов.Ссылка = ИсключенныеПользователи.Ссылка
	|ГДЕ
	|	(НЕ ВариантыОтчетов.ПометкаУдаления)
	|	И ВариантыОтчетов.КлючОбъекта + ""\"" + ВариантыОтчетов.КлючВарианта В (&Ключи)
	|	И ВариантыОтчетов.КлючОбъекта В (&СписокОтчетов)
	|	И (ИсключенныеПользователи.Пользователь = Пользователь)";
	
	Запрос.Текст = ТЗ;
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	Запрос.УстановитьПараметр("Ключи", ТаблицаВариантов.ВыгрузитьКолонку("Ключ"));
	УстановитьПривилегированныйРежим(истина);
	ТаблицаПользователей = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(ложь);
	
	ТаблицаВариантов.Колонки.Добавить("Группировка", Новый ОписаниеТипов(,, Новый КвалификаторыСтроки()));
	
	СписокГруппировок = Новый ТаблицаЗначений;
	СписокГруппировок.Колонки.Добавить("Группировка");
	СписокГруппировок.Колонки.Добавить("ГруппировкаПредставление");
	
	Для каждого СтрокаПодсистемы из ДеревоПодсистем.Строки Цикл
		ДанныеГруппировки                          = СписокГруппировок.Добавить(); 
		ДанныеГруппировки.Группировка              = СтрокаПодсистемы.Подсистема;
		ДанныеГруппировки.ГруппировкаПредставление = "";
		Для каждого СтрокаГруппировки из СтрокаПодсистемы.Строки Цикл
			ДанныеГруппировки                          = СписокГруппировок.Добавить(); 
			ДанныеГруппировки.Группировка              = СтрокаГруппировки.Подсистема;
			ДанныеГруппировки.ГруппировкаПредставление = СтрокаГруппировки.Название;
		КонецЦикла;
	КонецЦикла;
	
	// Дерево вариантов
	ГруппировкиВариантов = Новый Соответствие;
	ГруппировкиВариантовСмТакже = Новый СписокЗначений;
	
	СгруппированныйСписокВариантовОтчетов = Новый ДеревоЗначений;
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("Ключ");
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("Представление");
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("Описание");
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("Группировка");
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("ГруппировкаПредставление");
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("Сортировка");
	СгруппированныйСписокВариантовОтчетов.Колонки.Добавить("БыстрыйДоступ");
	
	Если ГруппироватьВарианты тогда
		Для каждого ГруппировкаВар из СписокГруппировок Цикл
			Если Найти(ГруппировкаВар.Группировка, "СмТакже") > 0  тогда
				Продолжить;
			КонецЕсли;
			СтрокаГруппировкиОтчета = СгруппированныйСписокВариантовОтчетов.Строки.Добавить();
			СтрокаГруппировкиОтчета.Группировка = ГруппировкаВар.Группировка;
			СтрокаГруппировкиОтчета.ГруппировкаПредставление = ГруппировкаВар.ГруппировкаПредставление;
			ГруппировкиВариантов.Вставить(ГруппировкаВар.Группировка, СтрокаГруппировкиОтчета);
		КонецЦикла;
	КонецЕсли;
	
	СтрокаГруппировкиОтчета = СгруппированныйСписокВариантовОтчетов.Строки.Добавить();
	СтрокаГруппировкиОтчета.Группировка = "ПрочиеИПользовательскиеВариантыОтчета";
	СтрокаГруппировкиОтчета.ГруппировкаПредставление = НСТр("ru = 'Прочие'");
	ГруппировкиВариантов.Вставить("ПрочиеИПользовательскиеВариантыОтчета", СтрокаГруппировкиОтчета);
	СтрокаФиксированнаяГруппировка = СтрокаГруппировкиОтчета;
	
	СтрокаГруппировкиОтчета = СгруппированныйСписокВариантовОтчетов.Строки.Добавить();
	СтрокаГруппировкиОтчета.Группировка = "СмТакже";
	СтрокаГруппировкиОтчета.ГруппировкаПредставление = НСТр("ru = 'См. также'");
	ГруппировкиВариантов.Вставить("СмТакже", СтрокаГруппировкиОтчета);
	СтрокаГруппировкаСмТакже = СтрокаГруппировкиОтчета;
	
	СтрокаГруппировкиОтчета = СгруппированныйСписокВариантовОтчетов.Строки.Добавить();
	СтрокаГруппировкиОтчета.Группировка = "ДополнительныеОтчеты";
	СтрокаГруппировкиОтчета.ГруппировкаПредставление = НСТр("ru = 'Дополнительные отчеты'");
	ГруппировкиВариантов.Вставить("ДополнительныеОтчеты", СтрокаГруппировкиОтчета);
	СтрокаГруппировкаДополнительныеОтчеты = СтрокаГруппировкиОтчета;
	
	ТаблицаДополнительныхКоманд = Новый ТаблицаЗначений;
	ТаблицаДополнительныхКоманд.Колонки.Добавить("УникальныйИдентификатор");
	ТаблицаДополнительныхКоманд.Колонки.Добавить("Представление");
	ТаблицаДополнительныхКоманд.Колонки.Добавить("Описание");
	ТаблицаДополнительныхКоманд.Колонки.Добавить("БыстрыйДоступ");
	ТаблицаДополнительныхКоманд.Колонки.Добавить("ПараметрКоманды");
	
	ВариантыОтчетовПереопределяемый.СписокДополнительныхКоманд(ТаблицаДополнительныхКоманд, ПутиПодсистемы);
	
	ПараметрыКоманд = Новый Массив;
	
	Если ТаблицаДополнительныхКоманд.Количество() > 0 Тогда
		Индекс = 0;
		Для Каждого СтрокаДополнительногоОтчета из ТаблицаДополнительныхКоманд Цикл
			
			СтрокаТаблицаВариантов = ТаблицаВариантов.Добавить();
			СтрокаТаблицаВариантов.Ключ	             = "Отчет.ДополнительнаяКоманда\"+СтрокаДополнительногоОтчета.УникальныйИдентификатор;
			СтрокаТаблицаВариантов.Представление     = СтрокаДополнительногоОтчета.Представление;
			СтрокаТаблицаВариантов.Описание          = СтрокаДополнительногоОтчета.Описание;
			СтрокаТаблицаВариантов.БыстрыйДоступ     = СтрокаДополнительногоОтчета.БыстрыйДоступ;
			СтрокаТаблицаВариантов.Сортировка        = СтрокаДополнительногоОтчета.Представление;
			СтрокаТаблицаВариантов.ТипВариантаОтчета = Перечисления.ТипыВариантовОтчетов.ДополнительнаяКоманда;
			СтрокаТаблицаВариантов.Подсистема        = "ДополнительныеОтчеты";
			
			СтрокаЗначенияКоманды = ЗначениеПараметровКоманд.Добавить();
			СтрокаЗначенияКоманды.Ключ = СтрокаДополнительногоОтчета.УникальныйИдентификатор;
			СтрокаЗначенияКоманды.ИндексПозицииЭлемента   = Индекс;
			ПараметрыКоманд.Добавить(Новый ФиксированнаяСтруктура(СтрокаДополнительногоОтчета.ПараметрКоманды));
			Индекс = Индекс + 1;
			
		КонецЦикла;
	КонецЕсли;
	
	МассивПараметровКомманд = Новый ФиксированныйМассив(ПараметрыКоманд);
	
	// Составим список отчетов
	СоответствиеВариантовНомеруСортировки = Новый Соответствие;
	
	Для каждого СтрокаВариантаОтчета из ТаблицаВариантов Цикл
		
		Если НЕ ГруппироватьВарианты или НЕ ЗначениеЗаполнено(СтрокаВариантаОтчета.Подсистема ) тогда
			СтрокаВариантаОтчета.Группировка = "ПрочиеИПользовательскиеВариантыОтчета";
		Иначе
			Если Найти(СтрокаВариантаОтчета.Подсистема, "СмТакже") > 0  тогда
				СтрокаВариантаОтчета.Группировка = "СмТакже";
			ИначеЕсли СтрокаВариантаОтчета.Подсистема = СтрокаВариантаОтчета.Подсистема тогда
				Для каждого ГруппировкаВараинта из ГруппировкиВариантов Цикл
					Если СтрокаВариантаОтчета.Подсистема = ГруппировкаВараинта.Ключ тогда
						СтрокаВариантаОтчета.Группировка = ГруппировкаВараинта.Ключ;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		СоответствиеВариантовНомеруСортировки.Вставить(СтрокаВариантаОтчета.Ключ, СтрокаВариантаОтчета.Сортировка);
	КонецЦикла;
	
	Для каждого СтрокаВарианта из ТаблицаВариантов Цикл
		
		БыстрыйДоступ = СтрокаВарианта.БыстрыйДоступ;
		СтрокиПользователи = ТаблицаПользователей.НайтиСтроки(Новый Структура("Ключ, Пользователь", СтрокаВарианта.Ключ, ПараметрыСеанса.ТекущийПользователь));
		Для каждого СтрокаПользователи из СтрокиПользователи Цикл
			БыстрыйДоступ = СтрокаПользователи.БыстрыйДоступ;
		КонецЦикла;
		
		Если СтрокаВарианта.Группировка = Неопределено Тогда
			НаборСтрок = СтрокаФиксированнаяГруппировка.Строки;
		Иначе
			НаборСтрок = ГруппировкиВариантов[СтрокаВарианта.Группировка].Строки;
		КонецЕсли;
		Если НаборСтрок.НайтиСтроки(Новый Структура("Ключ", СтрокаВарианта.Ключ)).Количество() = 0 Тогда
			СтрокаВариантаОтчета = НаборСтрок.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаВариантаОтчета, СтрокаВарианта);
			Если СтрокаВарианта.ТипВариантаОтчета = Перечисления.ТипыВариантовОтчетов.Отчет Тогда
				СтрокаВариантаОтчета.Ключ = СтрокаВарианта.Ключ + "_Отчет_";
			КонецЕсли;
			СтрокаВариантаОтчета.БыстрыйДоступ = БыстрыйДоступ;
			СтрокаВариантаОтчета.Сортировка = СоответствиеВариантовНомеруСортировки[СтрокаВарианта.Ключ];
			Если НЕ ЗначениеЗаполнено(СтрокаВариантаОтчета.Сортировка) Тогда
				СтрокаВариантаОтчета.Сортировка = "ЯЯ9999999999999";
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	// Удалить лишние группировки
	УдаляемыеГруппировки = Новый Массив;
	Для каждого СтрокаГруппировки из СгруппированныйСписокВариантовОтчетов.Строки Цикл
		Если СтрокаГруппировки.Строки.Количество() = 0 тогда
			УдаляемыеГруппировки.Добавить(СтрокаГруппировки);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого СтрокаГруппировки из УдаляемыеГруппировки Цикл
		СгруппированныйСписокВариантовОтчетов.Строки.Удалить(СтрокаГруппировки);
	КонецЦикла;
	
	// Вывести группировки отчета
	Если СгруппированныйСписокВариантовОтчетов.Строки.Количество() = 1 тогда 
		СтрокаГруппировки = СгруппированныйСписокВариантовОтчетов.Строки[0];
		Элементы.ГруппаОсновная.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ВывестиСслыкиНаВариантыОтчетов(СтрокаГруппировки, Элементы.ГруппаОсновная);
	Иначе
		Элементы.ГруппаОсновная.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		Для каждого СтрокаГруппировки из СгруппированныйСписокВариантовОтчетов.Строки Цикл
			
			Если Найти(СтрокаГруппировки.Группировка, "СмТакже") > 0 тогда
				Продолжить;
			КонецЕсли;
			
			// Пропустить группу "См. также"
			УИ = "ГруппаРаздела_" + СтрокаГруппировки.Группировка;
			Группа = ДобавитьГруппу(УИ, Элементы.ГруппаОсновная, СтрокаГруппировки.ГруппировкаПредставление, истина);
			ВывестиСслыкиНаВариантыОтчетов(СтрокаГруппировки, Группа);
		КонецЦикла;
	КонецЕсли;
	
	Если СгруппированныйСписокВариантовОтчетов.Строки.Найти("СмТакже", "Группировка") <>  Неопределено тогда
		Элементы.ГруппаСмТакже.БыстрыйДоступ = Истина;
		СтрокаГруппировки = СтрокаГруппировкаСмТакже;
		Элементы.ГруппаСмТакжеСпискиОтчетов.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ВывестиСслыкиНаВариантыОтчетов(СтрокаГруппировки, Элементы.ГруппаСмТакжеСпискиОтчетов);
	КонецЕсли;
	
КонецПроцедуры           

&НаСервере
Процедура ВывестиСслыкиНаВариантыОтчетов(СтрокаГруппировки, Группа)
	
	СтрокаГруппировки.Строки.Сортировать("Сортировка, Представление");
	
	ИмяГруппировки = ВариантыОтчетов.ЗаменитьЗапрещенныеСимволы(СтрокаГруппировки.Группировка);
	
	ИмяГруппировки = "_ГруппаРаздела_" + ИмяГруппировки;
	
	Колонка1 = ДобавитьГруппу(ИмяГруппировки + "Колонки1", Группа, "Первая колонка", , ложь);
	Колонка2 = ДобавитьГруппу(ИмяГруппировки + "Колонки2", Группа, "Вторая колонка", , ложь);
	Колонка3 = ДобавитьГруппу(ИмяГруппировки + "Колонки3", Группа, "Третья колонка", , ложь);
	
	КоличетвоВариантов = СтрокаГруппировки.Строки.Количество();
	
	МинимальноКолВоВариантов = Цел(КоличетвоВариантов/3);
	Остаток                  = КоличетвоВариантов - МинимальноКолВоВариантов*3;
	
	КоличествоВариантовВКолонке1 = МинимальноКолВоВариантов + ?(Остаток >= 1, 1, 0);
	КоличествоВариантовВКолонке2 = МинимальноКолВоВариантов + ?(Остаток >= 2, 1, 0);
	КоличествоВариантовВКолонке3 = МинимальноКолВоВариантов;
	
	Для Сч = 0 по КоличествоВариантовВКолонке1-1 Цикл
		СтрокаСсылки = СтрокаГруппировки.Строки[Сч];
		ДобавитьСсылкуНаВариантОтчета(
			СтрокаСсылки.Ключ + ИмяГруппировки, 
			СтрокаСсылки.Представление,  
			СтрокаСсылки.Описание, 
			Колонка1, 
			СтрокаСсылки.БыстрыйДоступ
		);
	КонецЦикла;
	
	Для Сч = КоличествоВариантовВКолонке1 по КоличествоВариантовВКолонке1 + КоличествоВариантовВКолонке2-1 Цикл
		СтрокаСсылки = СтрокаГруппировки.Строки[Сч];
		ДобавитьСсылкуНаВариантОтчета(
			СтрокаСсылки.Ключ + ИмяГруппировки, 
			СтрокаСсылки.Представление, 
			СтрокаСсылки.Описание, 
			Колонка2, 
			СтрокаСсылки.БыстрыйДоступ
		);
	КонецЦикла;
		
	Если КоличествоВариантовВКолонке1 > КоличествоВариантовВКолонке2 Тогда
		ДобавитьСсылкуНаВариантОтчета(
			ИмяГруппировки + "_Декорация2", 
			"", 
			"", 
			Колонка2, 
			Истина
		);
	КонецЕсли;

	Для Сч = КоличествоВариантовВКолонке1 + КоличествоВариантовВКолонке2 по КоличествоВариантовВКолонке1 + КоличествоВариантовВКолонке2 + КоличествоВариантовВКолонке3-1 Цикл
		СтрокаСсылки = СтрокаГруппировки.Строки[Сч];
		ДобавитьСсылкуНаВариантОтчета(
			СтрокаСсылки.Ключ + ИмяГруппировки, 
			СтрокаСсылки.Представление,  
			СтрокаСсылки.Описание, 
			Колонка3, 
			СтрокаСсылки.БыстрыйДоступ
		);
	КонецЦикла;
	
	Если КоличествоВариантовВКолонке1 > КоличествоВариантовВКолонке3 Тогда
		ДобавитьСсылкуНаВариантОтчета(
			ИмяГруппировки + "_Декорация3", 
			"", 
			"", 
			Колонка3, 
			Истина
		);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ДобавитьГруппу(Имя, Родитель, Заголовок = "", Горизонтально = ложь, ОтображатьЗаголовок = истина)
	
	Имя = ВариантыОтчетов.ЗаменитьЗапрещенныеСимволы(Имя);
	
	Группа = Элементы.Добавить(Имя, Тип("ГруппаФормы"), Родитель);
	Группа.Вид                 = ВидГруппыФормы.ОбычнаяГруппа;
	Группа.Заголовок           = Заголовок;
	Группа.ОтображатьЗаголовок = ОтображатьЗаголовок;
	Если Группа.ОтображатьЗаголовок тогда
		Группа.ШрифтЗаголовка = Новый Шрифт(Группа.ШрифтЗаголовка, , , истина);
	КонецЕсли;
	Группа.Отображение         = ОтображениеОбычнойГруппы.ОбычноеВыделение;
	Группа.Группировка         = ?(Горизонтально, ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная, 
		ГруппировкаПодчиненныхЭлементовФормы.Вертикальная);
	Группа.РастягиватьПоГоризонтали = Истина;
	Группа.ШиринаПодчиненныхЭлементов = ШиринаПодчиненныхЭлементовФормы.Одинаковая;
	
	Возврат Группа;
КонецФункции

&НаСервере
Процедура ДобавитьСсылкуНаВариантОтчета(Ключ, Представление, Описание, Родитель, БыстрыйДоступ)
	
	ИмяОтчета = Ключ;
	
	Ключ = ВариантыОтчетов.ЗаменитьЗапрещенныеСимволы(Ключ);
	
	Если Представление <> "" И Найти(Ключ, "Отчет_Точка_ДополнительнаяКоманда") = 0 тогда
 		ПозицияВарианта = СтрНайти(ИмяОтчета, "\");
		ИмяОтчета = Лев(ИмяОтчета, ПозицияВарианта-1);
		ИмяОтчета = СтрЗаменить(ИмяОтчета, "Отчет.", "");
		
		Отчет = Метаданные.Отчеты.Найти(ИмяОтчета);
		Если Отчет = Неопределено тогда
			Возврат;
		КонецЕсли;
		
		ЕстьПравоПросмотра  = ПравоДоступа("Просмотр", Отчет);
		Если НЕ ЕстьПравоПросмотра тогда
			Возврат;
		КонецЕсли;
		
		ПараметрыФО = Новый Структура("");
		
		ДоступенПоФоОпциям = ложь;
		СодержитсяВФО = ложь;
		Для каждого Опция из Метаданные.ФункциональныеОпции Цикл
			
			Если Опция.Состав.Найти(Отчет.Имя) = Неопределено тогда
				Продолжить;
			КонецЕсли;
			
			СодержитсяВФО = Истина;
			
			ЗначениеФО = ПолучитьФункциональнуюОпцию(Опция.Имя, ПараметрыФО);
			Если ТипЗнч(ЗначениеФО) = Тип("Булево") тогда
				Если ЗначениеФО тогда
					ДоступенПоФоОпциям = истина;
					Прервать;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	Иначе
		СодержитсяВФО = ложь;
		ДоступенПоФоОпциям = истина;
	КонецЕсли;
	
	Если СодержитсяВФО И НЕ ДоступенПоФоОпциям тогда
		Возврат;
	КонецЕсли;
		
	НоваяНадпись = Элементы.Добавить(Ключ, Тип("ДекорацияФормы"), Родитель);
	НоваяНадпись.Вид = ВидДекорацииФормы.Надпись;
	НоваяНадпись.Гиперссылка = Истина;
	НоваяНадпись.Заголовок  = СокрЛП(Представление);
	НоваяНадпись.Видимость = БыстрыйДоступ;
	НоваяНадпись.РастягиватьПоГоризонтали = Истина;
	НоваяНадпись.РастягиватьПоВертикали = Ложь;
	НоваяНадпись.Высота = 1;
	Если Представление <> "" Тогда
		НоваяНадпись.УстановитьДействие("Нажатие", "ОткрытьОтчет");
	КонецЕсли;
	
Конецпроцедуры

&НаКлиенте             
Процедура ОткрытьОтчет(Инициатор)
	
	Ключ = Инициатор.Имя;
	Ключ = Лев(Ключ, СтрНайти(Ключ, "_ГруппаРаздела_")-1);
	Ключ = ВариантыОтчетовКлиент.ВосстановитьЗапрещенныеСимволы(Ключ);
	
	ПозицияВарианта = СтрНайти(Ключ, "\");
	ИмяОтчета = Лев(Ключ, ПозицияВарианта-1);
	КлючВарианта = Прав(Ключ, СтрДлина(Ключ)-ПозицияВарианта);
	
	ПараметрыОтчета = Новый Структура("КлючВарианта", КлючВарианта);
	
	СтандартнаяОбработка = истина;
	
	ВариантыОтчетовКлиентПереопределяемый.ПередОткрытиемФормыОтчета(Ключ, ПараметрыОтчета, СтандартнаяОбработка);
	
	Если СтандартнаяОбработка тогда
		Если ИмяОтчета = "Отчет.ДополнительнаяКоманда" тогда
			ПараметрКоманды = ВариантыОтчетовКлиент.ПолучитьПараметрыКоманды(ЗначениеПараметровКоманд, МассивПараметровКомманд, КлючВарианта);
			Если ПараметрКоманды <> Неопределено тогда
				ВариантыОтчетовКлиентПереопределяемый.ВыполнитьВнешнююКоманду(КлючВарианта, ПараметрКоманды);
			КонецЕсли;
		Иначе
			ОткрытьФорму(ИмяОтчета + ".Форма", ПараметрыОтчета, , Ключ);
		КОнецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбщийСписокВариантовОтчетов(Команда)
	
	ПараметрыФормы = Новый Структура("Подсистемы, ИмяФормы, КартинкаФормы");
	
	ПараметрыФормы.Подсистемы           = Подсистемы;
	ПараметрыФормы.ИмяФормы             = "Все " + Нрег(ИмяФормыОтчетов);
	ПараметрыФормы.КартинкаФормы        = КартинкаФормы;
	
	СтруктураПараметров = ОткрытьФорму("ОбщаяФорма.ВсеОтчеты", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьВариантовОтчета(СтруктураПараметров)
	
	СписокКлючей = СтруктураПараметров.СписокВариантов;
	
	ТЗ = "ВЫБРАТЬ
	|	ВариантыОтчетов.Ссылка,
	|	ВариантыОтчетов.БыстрыйДоступ,
	|	ВариантыОтчетов.КлючОбъекта + ""\"" + ВариантыОтчетов.КлючВарианта КАК Ключ
	|ИЗ
	|	Справочник.ВариантыОтчетов КАК ВариантыОтчетов
	|ГДЕ
	|	ВариантыОтчетов.КлючОбъекта + ""\"" + ВариантыОтчетов.КлючВарианта В (&Ключ)";
		 
	Запрос = Новый Запрос(ТЗ);
	Запрос.УстановитьПараметр("Ключ", СписокКлючей);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	
	Пока Выборка.Следующий() Цикл
		ЗначениеЭлемент = СписокКлючей.НайтиПоЗначению(Выборка.Ключ);
		Если ЗначениеЭлемент <> Неопределено тогда
			Объект = Выборка.Ссылка.ПолучитьОбъект();
			СтрокиПользователя = Объект.ИсключенияБыстрогоДоступа.НайтиСтроки(Новый Структура("Пользователь", ТекущийПользователь));
			Если ЗначениеЭлемент.Пометка <> Выборка.БыстрыйДоступ тогда
				Если СтрокиПользователя.Количество() = 0 тогда
					СтрокаПользователя              = Объект.ИсключенияБыстрогоДоступа.Добавить();
					СтрокаПользователя.Пользователь = ТекущийПользователь;
					Объект.Записать();
				КонецЕсли;
			Иначе
				Если СтрокиПользователя.Количество() > 0 тогда
 					Объект.ИсключенияБыстрогоДоступа.Удалить(СтрокиПользователя[0]);
					Объект.Записать();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	СписокВнешниихКоманд = Новый Массив;
	
	Для каждого Ключ из СписокКлючей Цикл
		Если Найти(Ключ.Значение, "Отчет.ДополнительнаяКоманда") > 0 Тогда
			КлючВарианта = СтрЗаменить(Ключ.Значение, "Отчет.ДополнительнаяКоманда\", "");
			ПараметрКоманды = Неопределено;
			Для Каждого СтрокаПараметра из ЗначениеПараметровКоманд Цикл
				Если СтрокаПараметра.Ключ = КлючВарианта Тогда
					ПараметрКоманды = МассивПараметровКомманд[СтрокаПараметра.ИндексПозицииЭлемента];
				КонецЕсли;
			КонецЦикла;
			СтруктураПараметра = Новый Структура("УникальныйИдентификатор, БыстрыйДоступ, ПараметрКоманды", 
			КлючВарианта, 
			Ключ.Пометка, 
			ПараметрКоманды);
			
			СписокВнешниихКоманд.Добавить(СтруктураПараметра);
			
		КонецЕсли;
	КонецЦикла;
	
	Если СписокВнешниихКоманд.Количество() > 0 Тогда
		ВариантыОтчетовПереопределяемый.УстановитьБыстрыйДоступВнешнихКоманд(СписокВнешниихКоманд);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	СписокЭлементов = СтруктураПараметров.СписокЭлементов;
	
	Для каждого Элемент из СписокЭлементов Цикл
		ЭлементФормы = Элементы.Найти(Элемент.Значение);
		Если ЭлементФормы <> Неопределено тогда
			 ЭлементФормы.Видимость = Элемент.Пометка;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ВыбранноеЗначение <> Неопределено тогда
		УстановитьВидимостьВариантовОтчета(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ХранилищеВариантовОтчетов" тогда
		ОбновитьПанельОтчетов();
	КонецЕсли;
	
КонецПроцедуры
