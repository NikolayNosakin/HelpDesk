////////////////////////////////////////////////////////////////////////////////
// УПРАВЛЕНИЕ ФОРМОЙ
&НаКлиенте
Перем мВидСсылки;

&НаКлиенте
Процедура НастроитьФорму()
	
	Элементы.Гиперссылка.Видимость		= (ВидСсылки = 1);
	Элементы.СтатьяБазыЗнаний.Видимость	= (ВидСсылки = 0);
	Элементы.Файл.Видимость	= (ВидСсылки > 1);
	
	Элементы.ГруппаПредставление.Видимость = ДоступностьПредставления;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКА СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ВидСсылкиПриИзменении(Элемент)
	Если ВидСсылки = 0 Тогда
		Гиперссылка = "";
		Файл	= Неопределено;
	ИначеЕсли ВидСсылки = 1 Тогда
		СтатьяБазыЗнаний	= Неопределено;
		Файл	= Неопределено;
	ИначеЕсли ВидСсылки = 2 И мВидСсылки <> 2 И мВидСсылки <> Неопределено Тогда
		СтатьяБазыЗнаний	= Неопределено;
		Файл	= Неопределено;
		Гиперссылка = "";
	ИначеЕсли ВидСсылки = 3 И мВидСсылки <> 3 И мВидСсылки <> Неопределено Тогда
		СтатьяБазыЗнаний	= Неопределено;
		Файл	= Неопределено;
		Гиперссылка = "";
	КонецЕсли;
	мВидСсылки = ВидСсылки;	
	НастроитьФорму();
КонецПроцедуры

&НаКлиенте
Процедура СтатьяБазыЗнанийПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ЭтотОбъект.СтатьяБазыЗнаний) Тогда
		//ЭтотОбъект.Гиперссылка = ПолучитьНавигационнуюСсылку(ЭтотОбъект.СтатьяБазыЗнаний);
		ЭтотОбъект.Гиперссылка = "article:" + ЭтотОбъект.СтатьяБазыЗнаний.УникальныйИдентификатор() + "";
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКА СОБЫТИЙ ФОРМЫ
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Список = Элементы.Гиперссылка.СписокВыбора;
	Список.Добавить("http://");
	Список.Добавить("https://");
	Список.Добавить("ftp://");
	
	Если Не ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
		ТекЭлем = Элементы.ВидСсылки.СписокВыбора.НайтиПоИдентификатору("1");
		Если ТекЭлем <> Неопределено Тогда
			Элементы.ВидСсылки.СписокВыбора.Удалить(ТекЭлем);
		КонецЕслИ;
	КонецЕсли;
	
	Если Найти(Гиперссылка,"article:") <> 0 Тогда
		ВидСсылки = 0;
		Идентификатор = Сред(Гиперссылка, 9);
		
		Разделитель = СтрНайти(Гиперссылка, "#");
		Если Разделитель > 0 Тогда
			Якорь			= Сред(Идентификатор, Разделитель + 1);
			Идентификатор	= Лев(Идентификатор, Разделитель - 1);
		Иначе 
			Якорь			= "";
		КонецЕсли;
		
		СтатьяБазыЗнаний = БазаЗнанийСервер.ПолучитьСсылкуПоИдентификатору("СтатьиБазыЗнаний", Идентификатор);
	ИначеЕсли Найти(Гиперссылка,"filebase:") <> 0 Тогда
		ВидСсылки = 3;
		Идентификатор = Сред(Гиперссылка, 10);
		
		Разделитель = СтрНайти(Гиперссылка, "#");
		Если Разделитель > 0 Тогда
			Якорь			= Сред(Идентификатор, Разделитель + 1);
			Идентификатор	= Лев(Идентификатор, Разделитель - 1);
		Иначе 
			Якорь			= "";
		КонецЕсли;
		
		Файл = БазаЗнанийСервер.ПолучитьСсылкуПоИдентификатору("Файлы", Идентификатор);
	ИначеЕсли Найти(Гиперссылка,"fileint:") <> 0 Тогда
		ВидСсылки = 2;
		Идентификатор = Сред(Гиперссылка, 9);
		
		Разделитель = СтрНайти(Гиперссылка, "#");
		Если Разделитель > 0 Тогда
			Якорь			= Сред(Идентификатор, Разделитель + 1);
			Идентификатор	= Лев(Идентификатор, Разделитель - 1);
		Иначе 
			Якорь			= "";
		КонецЕсли;
		
		Файл = БазаЗнанийСервер.ПолучитьСсылкуПоИдентификатору("Файлы", Идентификатор)	
	Иначе
		ВидСсылки = 1;
	КонецЕсли;	
	мВидСсылки = ВидСсылки;
	НастроитьФорму();
КонецПроцедуры

&НаКлиенте
Функция ПодготовитьГиперСсылку(Ссылка)
	Если Найти(Ссылка,"article:") = 0 И 
		Найти(Ссылка,"filebase:") = 0 И 
		Найти(Ссылка,"fileint:") = 0 Тогда	
		Если Найти(НРЕГ(Ссылка),"http://") = 0 Тогда
			Ссылка = "http://"+СокрЛ(Ссылка);
		КонецЕсли;
	КонецЕсли;	
	Возврат СокрЛП(Ссылка);	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКА КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	Отказ = Ложь;

	Если Не ЗначениеЗаполнено(Представление) И ДоступностьПредставления = Истина Тогда
		ПоказатьПредупреждение(Новый ОписаниеОповещения("ЗаписатьИЗакрытьЗавершение1", ЭтотОбъект), "Не заполнено представление!");
        Возврат;
	КонецЕсли;
	ЗаписатьИЗакрытьФрагмент1(Отказ);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрытьЗавершение1(ДополнительныеПараметры) Экспорт
	
	Отказ = Истина;
	
	ЗаписатьИЗакрытьФрагмент1(Отказ);

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрытьФрагмент1(Знач Отказ)
	
	Если Не ЗначениеЗаполнено(Гиперссылка) Тогда
		ПоказатьПредупреждение(Новый ОписаниеОповещения("ЗаписатьИЗакрытьЗавершение", ЭтотОбъект), "Не заполнена ссылка!");
		Возврат;
	КонецЕсли;
	
	ЗаписатьИЗакрытьФрагмент(Отказ);

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрытьЗавершение(ДополнительныеПараметры) Экспорт
	
	Отказ = Истина;
	
	ЗаписатьИЗакрытьФрагмент(Отказ);

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрытьФрагмент(Знач Отказ)
	
	Перем СтруктураГиперссылки;
	
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	СтруктураГиперссылки = Новый Структура("Гиперссылка, Представление",
	ПодготовитьГиперСсылку(Гиперссылка),
	Представление);
	
	
	ЭтотОбъект.Закрыть(СтруктураГиперссылки);

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("ГиперСсылка") Тогда
		ГиперСсылка = Параметры.ГиперСсылка;
	КонецЕсли;	
	Если Параметры.Свойство("Представление") Тогда
		Представление = Параметры.Представление;
	КонецЕсли;	
	Если Параметры.Свойство("ДоступностьПредставления") Тогда
		ДоступностьПредставления = Параметры.ДоступностьПредставления;
	КонецЕсли;	
	Если Параметры.Свойство("СсылкаНаОбъект") Тогда
		СсылкаНаОбъект = Параметры.СсылкаНаОбъект;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ФайлПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ЭтотОбъект.Файл) Тогда
		ЭтотОбъект.Гиперссылка = ?(ВидСсылки=3,"filebase:","fileint:") + ЭтотОбъект.Файл.УникальныйИдентификатор() + "";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФайлНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура();
	Если ВидСсылки = 3 Тогда
		ФормаСписка = ПолучитьФорму("Справочник.Файлы.ФормаВыбора",ПараметрыФормы,Элемент);
	Иначе
		ПараметрыФормы.Вставить("ВладелецФайла",СсылкаНаОбъект);
		ФормаСписка = ПолучитьФорму("Справочник.Файлы.Форма.ФормаВыбораФайлов",ПараметрыФормы,Элемент);
	КонецЕсли;	
	ФормаСписка.ОткрытьМодально();
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	Список = Новый СписокЗначений;
	Список.Добавить("http://","http://");
	Список.Добавить("mailto:","mailto:");
	ФлагНеНашел = Истина;
	
	Для Каждого ЭлементСписка Из Список Цикл 
		ВариантЗаголовка=ЭлементСписка.Значение;
		Если Лев(Текст,СтрДлина(ВариантЗаголовка))=ВариантЗаголовка Тогда 
			ФлагНеНашел = Ложь;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ФлагНеНашел Тогда 
		Элемент.СписокВыбора.Очистить();
		Для Каждого ЭлементСписка Из Список Цикл 
			ВариантЗаголовка=ЭлементСписка.Значение;
			Элемент.СписокВыбора.Добавить(""+ВариантЗаголовка+Текст);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Гиперссылка=ВыбранноеЗначение;
	Элемент.СписокВыбора.Очистить();
КонецПроцедуры



