&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИспользоватьДатуИВремяВСрокахЗадач = РаботаСБизнесПроцессами.ПолучитьИспользованиеДатыИВремениВСрокахЗадач();
	Элементы.ДеревоЗадачСрокИсполнения.Формат = ?(ИспользоватьДатуИВремяВСрокахЗадач, "ДФ='дд.ММ.гггг ЧЧ:мм'", "ДЛФ=D");
	
	Если Параметры.Свойство("Заголовок") Тогда
		Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
	ЗаполнитьДеревоЗадач();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗадачаИзменена" ИЛИ ИмяСобытия = "ЗадачаВыполнена" ИЛИ ИмяСобытия = "БизнесПроцессИзменен" Тогда 
		ЗаполнитьДеревоЗадач();
		Для каждого Строка ИЗ ДеревоЗадач.ПолучитьЭлементы() Цикл
			Элементы.ДеревоЗадач.Развернуть(Строка.ПолучитьИдентификатор(), Истина);
		КонецЦикла;
	КонецЕсли;
	
	Для каждого Строка ИЗ ДеревоЗадач.ПолучитьЭлементы() Цикл
		Элементы.ДеревоЗадач.Развернуть(Строка.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоЗадач()
	
	Дерево = РеквизитФормыВЗначение("ДеревоЗадач");
	Дерево.Строки.Очистить();
	
	ДобавитьЗадачиПоПредмету(Дерево, Параметры.Предмет);
	
	ЗначениеВДанныеФормы(Дерево, ДеревоЗадач);
	
	УстановитьТекущуюСтроку(ДеревоЗадач.ПолучитьЭлементы());
	
КонецПроцедуры	

&НаСервере
Процедура УстановитьТекущуюСтроку(ЭлементыДерева)
	
	Если Элементы.Количество() > 0 Тогда
		Для каждого Эл Из ЭлементыДерева Цикл
			Если Эл.Ссылка = ТекущаяСтрокаВДереве Тогда
				Элементы.ДеревоЗадач.ТекущаяСтрока = Эл.ПолучитьИдентификатор();
				Возврат;
			Иначе	
				УстановитьТекущуюСтроку(Эл.ПолучитьЭлементы());
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Процедура ДобавитьЗадачиПоПредмету(Дерево, Предмет)
	
	Для каждого МетаданныеБизнесПроцесса Из Метаданные.БизнесПроцессы Цикл
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	БизнесПроцессы.Ссылка,
			|	БизнесПроцессы.Наименование,
			|	БизнесПроцессы.Завершен,
			|	ВЫБОР
			|		КОГДА БизнесПроцессы.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиЗадачи.Низкая)
			|			ТОГДА 0
			|		КОГДА БизнесПроцессы.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиЗадачи.Высокая)
			|			ТОГДА 2
			|		ИНАЧЕ 1
			|	КОНЕЦ КАК Важность,
			|	ВЫБОР
			|		КОГДА БизнесПроцессы.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияБизнесПроцессов.Остановлен)
			|			ТОГДА Истина
			|		ИНАЧЕ Ложь
			|	КОНЕЦ КАК Остановлен
			|ИЗ
			|	%БизнесПроцесс% КАК БизнесПроцессы
			|ГДЕ
			|   БизнесПроцессы.Предмет = &Предмет
			|   И БизнесПроцессы.ГлавнаяЗадача = ЗНАЧЕНИЕ(Задача.ЗадачаИсполнителя.ПустаяСсылка)
			|	И БизнесПроцессы.ВедущаяЗадача = ЗНАЧЕНИЕ(Задача.ЗадачаИсполнителя.ПустаяСсылка)
			|   И БизнесПроцессы.ПометкаУдаления = Ложь
			|
			|УПОРЯДОЧИТЬ ПО
			|	БизнесПроцессы.Дата";
			
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%БизнесПроцесс%", МетаданныеБизнесПроцесса.ПолноеИмя());
		Запрос.УстановитьПараметр("Предмет", Предмет);

		Результат = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = Результат.Выбрать();

		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Строка = Дерево.Строки.Добавить();
			
			Строка.Наименование = ВыборкаДетальныеЗаписи.Наименование;
			Строка.Важность = ВыборкаДетальныеЗаписи.Важность;
			Строка.Остановлен = ВыборкаДетальныеЗаписи.Остановлен;
			Строка.Ссылка = ВыборкаДетальныеЗаписи.Ссылка;
			Строка.Выполнена = ВыборкаДетальныеЗаписи.Завершен;
			Строка.ПринятаКИсполнению = Истина;
			Строка.Тип = 0;
			
			ДобавитьЗадачиПодчиненногоБизнесПроцесса(Дерево, ВыборкаДетальныеЗаписи.Ссылка);
			
		КонецЦикла;
		
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервере
Процедура ДобавитьПодчиненныеБизнесПроцессы(Дерево, ЗадачаСсылка)
	
	Ветвь = Дерево.Строки.Найти(ЗадачаСсылка, "Ссылка", Истина);
	
	Для каждого МетаданныеБизнесПроцесса Из Метаданные.БизнесПроцессы Цикл
		
		РеквизитГлавнаяЗадача = МетаданныеБизнесПроцесса.Реквизиты.Найти("ГлавнаяЗадача");
		Если РеквизитГлавнаяЗадача = Неопределено Тогда
			Продолжить;
		КонецЕсли;	
			
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	БизнесПроцессы.Ссылка,
			|	БизнесПроцессы.Наименование,
			|	БизнесПроцессы.Завершен,
			|	ВЫБОР
			|		КОГДА БизнесПроцессы.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиЗадачи.Низкая)
			|			ТОГДА 0
			|		КОГДА БизнесПроцессы.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиЗадачи.Высокая)
			|			ТОГДА 2
			|		ИНАЧЕ 1
			|	КОНЕЦ КАК Важность,
			|	ВЫБОР
			|		КОГДА БизнесПроцессы.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияБизнесПроцессов.Остановлен)
			|			ТОГДА Истина
			|		ИНАЧЕ Ложь
			|	КОНЕЦ КАК Остановлен
			|ИЗ
			|	%БизнесПроцесс% КАК БизнесПроцессы
			|ГДЕ
			|   (БизнесПроцессы.ГлавнаяЗадача = &Задача ИЛИ БизнесПроцессы.ВедущаяЗадача = &Задача)
			|   И БизнесПроцессы.ПометкаУдаления = Ложь";
			
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%БизнесПроцесс%", МетаданныеБизнесПроцесса.ПолноеИмя());
		Запрос.УстановитьПараметр("Задача", ЗадачаСсылка);

		Результат = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = Результат.Выбрать();

		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Строка = Неопределено;
			Если Ветвь = Неопределено Тогда
				Строка = Дерево.Строки.Добавить();
			Иначе	
				Строка = Ветвь.Строки.Добавить();
			КонецЕсли;
			
			Строка.Наименование = ВыборкаДетальныеЗаписи.Наименование;
			Строка.Важность = ВыборкаДетальныеЗаписи.Важность;
			Строка.Остановлен = ВыборкаДетальныеЗаписи.Остановлен;
			Строка.Ссылка = ВыборкаДетальныеЗаписи.Ссылка;
			Строка.Выполнена = ВыборкаДетальныеЗаписи.Завершен;
			Строка.ПринятаКИсполнению = Истина;
			Строка.Тип = 0;
			
			ДобавитьЗадачиПодчиненногоБизнесПроцесса(Дерево, ВыборкаДетальныеЗаписи.Ссылка);
			
		КонецЦикла;
		
	КонецЦикла;	

КонецПроцедуры

&НаСервере
Процедура ДобавитьЗадачиПодчиненногоБизнесПроцесса(Дерево, БизнесПроцессСсылка)
	
	Ветвь = Дерево.Строки.Найти(БизнесПроцессСсылка, "Ссылка", Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Задачи.Ссылка,
		|	Задачи.Наименование,
		|	Задачи.Исполнитель,
		|	Задачи.РольИсполнителя,
		|	Задачи.СрокИсполнения,
		|	Задачи.Выполнена,
		|	Задачи.ПринятаКИсполнению,
		|	ВЫБОР
		|		КОГДА Задачи.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиЗадачи.Низкая)
		|			ТОГДА 0
		|		КОГДА Задачи.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиЗадачи.Высокая)
		|			ТОГДА 2
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК Важность,
		|	ВЫБОР
		|		КОГДА Задачи.СостояниеБизнесПроцесса = ЗНАЧЕНИЕ(Перечисление.СостоянияБизнесПроцессов.Остановлен)
		|			ТОГДА Истина
		|		ИНАЧЕ Ложь
		|	КОНЕЦ КАК Остановлен
		|ИЗ
		|	Задача.ЗадачаИсполнителя КАК Задачи
		|ГДЕ
		|   Задачи.БизнесПроцесс = &БизнесПроцесс
		|   И Задачи.ПометкаУдаления = Ложь
		|
		|УПОРЯДОЧИТЬ ПО
		|	Задачи.Дата";
		
	Запрос.УстановитьПараметр("БизнесПроцесс", БизнесПроцессСсылка);

	Результат = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Строка = Неопределено;
		Если Ветвь = Неопределено Тогда
			Строка = Дерево.Строки.Добавить();
		Иначе	
			Строка = Ветвь.Строки.Добавить();
		КонецЕсли;
        ВедомыйБизнесПроцесс = Новый Структура();
		Если НЕ ЭтоВедущаяЗадача(ВыборкаДетальныеЗаписи.Ссылка, ВедомыйБизнесПроцесс) Тогда
						
			Строка.Наименование = ВыборкаДетальныеЗаписи.Наименование;
			Строка.Важность = ВыборкаДетальныеЗаписи.Важность;
			Строка.Тип = 1;
			Строка.Остановлен = ВыборкаДетальныеЗаписи.Остановлен;
			Строка.Ссылка = ВыборкаДетальныеЗаписи.Ссылка;
			Строка.СрокИсполнения = ВыборкаДетальныеЗаписи.СрокИсполнения;
			Строка.Выполнена = ВыборкаДетальныеЗаписи.Выполнена;
			Строка.ПринятаКИсполнению = ВыборкаДетальныеЗаписи.ПринятаКИсполнению;
			Строка.Просрочена = Ложь;
			Если ВыборкаДетальныеЗаписи.СрокИсполнения <> '00010101000000' 
				И ВыборкаДетальныеЗаписи.СрокИсполнения < ТекущаяДата() Тогда
				Строка.Просрочена = Истина;
			КонецЕсли;				
			Если ВыборкаДетальныеЗаписи.Исполнитель.Пустая() Тогда
				Строка.Исполнитель = ВыборкаДетальныеЗаписи.РольИсполнителя;
			Иначе	
				Строка.Исполнитель = ВыборкаДетальныеЗаписи.Исполнитель;
			КонецЕсли;	
			
			ДобавитьПодчиненныеБизнесПроцессы(Дерево, ВыборкаДетальныеЗаписи.Ссылка);
		Иначе
			Строка.Наименование = ВедомыйБизнесПроцесс.Наименование;
			Строка.Важность = ВедомыйБизнесПроцесс.Важность;
			Строка.Остановлен = ВедомыйБизнесПроцесс.Остановлен;
			Строка.Ссылка = ВедомыйБизнесПроцесс.Ссылка;
			Строка.Выполнена = ВедомыйБизнесПроцесс.Завершен;
			Строка.ПринятаКИсполнению = Истина;
			Строка.Тип = 0;
			ДобавитьЗадачиПодчиненногоБизнесПроцесса(Дерево, Строка.Ссылка);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ЭтоВедущаяЗадача(ЗадачаСсылка, ДанныеВедомогоПроцесса)
	
	Запрос = Новый Запрос;
	Для каждого МетаданныеБизнесПроцесса Из Метаданные.БизнесПроцессы Цикл
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	БизнесПроцессы.Ссылка,
			|	БизнесПроцессы.Наименование,
			|	БизнесПроцессы.Завершен,
			|	ВЫБОР
			|		КОГДА БизнесПроцессы.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиЗадачи.Низкая)
			|			ТОГДА 0
			|		КОГДА БизнесПроцессы.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиЗадачи.Высокая)
			|			ТОГДА 2
			|		ИНАЧЕ 1
			|	КОНЕЦ КАК Важность,
			|	ВЫБОР
			|		КОГДА БизнесПроцессы.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияБизнесПроцессов.Остановлен)
			|			ТОГДА Истина
			|		ИНАЧЕ Ложь
			|	КОНЕЦ КАК Остановлен
			|ИЗ
			|	%БизнесПроцесс% КАК БизнесПроцессы
			|ГДЕ
			|   БизнесПроцессы.ВедущаяЗадача = &Задача";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%БизнесПроцесс%", МетаданныеБизнесПроцесса.ПолноеИмя());
		Запрос.УстановитьПараметр("Задача", ЗадачаСсылка);

		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ДанныеВедомогоПроцесса.Вставить("Наименование", Выборка.Наименование);
			ДанныеВедомогоПроцесса.Вставить("Важность", Выборка.Важность);
			ДанныеВедомогоПроцесса.Вставить("Остановлен", Выборка.Остановлен);
			ДанныеВедомогоПроцесса.Вставить("Ссылка", Выборка.Ссылка);
			ДанныеВедомогоПроцесса.Вставить("Завершен", Выборка.Завершен);
			Возврат Истина;
		КонецЦикла;
	КонецЦикла;

	Возврат Ложь;
	
КонецФункции

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьДеревоЗадач();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДеревоЗадач()
	
	ЗаполнитьДеревоЗадач();
	Для каждого Строка ИЗ ДеревоЗадач.ПолучитьЭлементы() Цикл
		Элементы.ДеревоЗадач.Развернуть(Строка.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Изменить(Команда)
	
	ОткрытьТекущуюСтрокуДереваЗадач();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоЗадачВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьТекущуюСтрокуДереваЗадач();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьТекущуюСтрокуДереваЗадач()
	
	Если Элементы.ДеревоЗадач.ТекущиеДанные <> Неопределено Тогда
		Если ТипЗнч(Элементы.ДеревоЗадач.ТекущиеДанные.Ссылка) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
			БизнесПроцессыИЗадачиКлиент.ОткрытьФормуВыполненияЗадачи(Элементы.ДеревоЗадач.ТекущиеДанные.Ссылка);
		Иначе	
			ПоказатьЗначение(Неопределено, Элементы.ДеревоЗадач.ТекущиеДанные.Ссылка);
		КонецЕсли;	
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ДеревоЗадачПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ДеревоЗадач.ТекущиеДанные <> Неопределено Тогда
		ТекущаяСтрокаВДереве = Элементы.ДеревоЗадач.ТекущиеДанные.Ссылка;	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПринятьКИсполнению(Команда)
	
	МассивЗадач = Новый Массив;
	Для каждого Эл Из Элементы.ДеревоЗадач.ВыделенныеСтроки Цикл
		Строка = ДеревоЗадач.НайтиПоИдентификатору(Эл);
		МассивЗадач.Добавить(Строка.Ссылка);
	КонецЦикла;
	
	КомандыРаботыСБизнесПроцессамиКлиент.ПринятьЗадачиКИсполнению(МассивЗадач);
	ОбновитьДеревоЗадач();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПринятиеКИсполнению(Команда)
	
	МассивЗадач = Новый Массив;
	Для каждого Эл Из Элементы.ДеревоЗадач.ВыделенныеСтроки Цикл
		Строка = ДеревоЗадач.НайтиПоИдентификатору(Эл);
		МассивЗадач.Добавить(Строка.Ссылка);
	КонецЦикла;
	
	КомандыРаботыСБизнесПроцессамиКлиент.ОтменитьПринятиеЗадачКИсполнению(МассивЗадач);
	ОбновитьДеревоЗадач();
	
КонецПроцедуры

