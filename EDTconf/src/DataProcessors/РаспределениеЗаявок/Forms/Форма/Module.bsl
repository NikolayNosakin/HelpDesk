#Область ПеременныеФормы

&НаКлиенте
Перем ТекущийЭлементЦвета;

#КонецОбласти

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоОрганизациям") Тогда
		ИспользоватьУчетПоОрганизациям = Истина;
	Иначе
		ИспользоватьУчетПоОрганизациям = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	Элементы.ПулЗаявокОрганизация.Видимость = ИспользоватьУчетПоОрганизациям;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодключитьОбработчикОжидания("ОбработкаОжидания", 600);
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОжидания()
	ОбновитьСписок();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписок()
	Элементы.ПулЗаявок.Обновить();
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьСписок();
КонецПроцедуры

&НаКлиенте
Процедура ПулЗаявокПриАктивизацииСтроки(Элемент)
	ДокЗаявки = Элементы.ПулЗаявок.ТекущаяСтрока;
	Если ДокЗаявки <> Неопределено И ТипЗнч(ДокЗаявки) <> Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		Элементы.НазначитьЗаявку.Доступность = Истина;
		Элементы.ПулЗаявокОтменитьЗаявку.Доступность = Истина;
		Кодировка = КодировкаТекста.UTF8;
		ОписаниеЗаявкиHTML = ПодготовитьHTMLСтраницу(РаботаСЗаявками.ПолучитьТекстHTMLЗаявки(ДокЗаявки,Кодировка,ЭтаФорма.УникальныйИдентификатор));
	Иначе
		Элементы.НазначитьЗаявку.Доступность = Ложь;
		Элементы.ПулЗаявокОтменитьЗаявку.Доступность = Ложь;
		ОписаниеЗаявкиHTML = ПодготовитьHTMLСтраницу("");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПодготовитьHTMLСтраницу(ТекстHTML)
	
	//Добавим тег HTML если он отсутствует. 
	//Необходимо для корректного отображения в элементе формы.
	Если СтрЧислоВхождений(ТекстHTML,"<body") = 0 Тогда
		ЗаголовокHTML = "<html>
		|<style type='text/css'>	
  		|Body{
  		|border:0; margin: 0 0 0 5px; /* Отступ Body*/
  		|} 
		|P{
  		|border:0; margin: 5px 0 0 10px; /* Отступ P*/
  		|}
		|</style>
		|<head>
		|<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"" />
		//|<meta http-equiv=""X-UA-Compatible"" content=""IE=EmulateIE7"" />
		|<meta name=""format-detection"" content=""telephone=no"" />
		|</head>
		|<body>";
		
		ПодвалHTML = "</body>
		|</html>";
		
		ТекстHTML = ЗаголовокHTML + ТекстHTML + ПодвалHTML;
	Иначе
		//Возможно у нас уже есть Body, тогда проверим тег overflow в body
		ТекстHTML = СтрЗаменить(ТекстHTML,"overflow:hidden;","");
	КонецЕсли;	
	
	Возврат ТекстHTML;
	
КонецФункции

&НаСервере
Процедура ПереместитьЗаявкиНаПользователя(МассивЗаявок,НовыйИсполнитель)	
	Если Не ЗначениеЗаполнено(НовыйИсполнитель) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Заявка из МассивЗаявок Цикл
		Если ТипЗнч(Заявка) = Тип("ДокументСсылка.Заявка") Тогда
			ЗаявкаОбъект = Заявка.ПолучитьОбъект();
			ЗаявкаОбъект.ТекущийИсполнитель = НовыйИсполнитель;
			
			НоваяСтрока = ЗаявкаОбъект.ТекстыДополнений.Добавить();
			НоваяСтрока.ТипДополнения = Перечисления.ВидыСобытийПоЗаявке.Передача;
			НоваяСтрока.ОписаниеДополненияHTML = "";
			НоваяСтрока.ОписаниеДополнения = "";
			НоваяСтрока.Пользователь = ПараметрыСеанса.ТекущийПользователь;
			НоваяСтрока.ИдДополнения = Новый УникальныйИдентификатор();
			НоваяСтрока.ДатаСоздания = ТекущаяДата();
			НоваяСтрока.Получатель = НовыйИсполнитель;
			
			ЗаявкаОбъект.Записать();
		КонецЕсли;
	КонецЦикла;
	
	Элементы.ПулЗаявок.Обновить();
КонецПроцедуры

&НаСервере
Процедура ОтменитьЗаявкуСервер(МассивЗаявок)		
	Для Каждого Заявка из МассивЗаявок Цикл
		Если ТипЗнч(Заявка) = Тип("ДокументСсылка.Заявка") Тогда
			ЗаявкаОбъект = Заявка.ПолучитьОбъект();
			ЗаявкаОбъект.Статус = Справочники.СостоянияЗаявок.Отменена;
			ЗаявкаОбъект.Записать();
		КонецЕсли;
	КонецЦикла;
	
	Элементы.ПулЗаявок.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьПользователяДляЗаявки(МассивСтрок) 
	Массив = Новый Массив;
	Массив.Добавить(Тип("СправочникСсылка.Пользователи"));
	ОписаниеТиповПользователи = Новый ОписаниеТипов(Массив);
	ПоказатьВводЗначения(Новый ОписаниеОповещения("ПолучитьПользователяДляЗаявкиЗавершение", ЭтотОбъект, Новый Структура("МассивСтрок",МассивСтрок)),ПользователиКлиентСервер.ТекущийПользователь(), "Выберите пользователя", ОписаниеТиповПользователи);
КонецПроцедуры	

&НаКлиенте
Процедура НазначитьЗаявку(Команда)
	МассивСтрок = Элементы.ПулЗаявок.ВыделенныеСтроки;
	Если МассивСтрок.Количество() <> 0 Тогда
		ПолучитьПользователяДляЗаявки(МассивСтрок);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура  ПолучитьПользователяДляЗаявкиЗавершение(Значение, ДополнительныеПараметры) Экспорт
	МассивСтрок =  ДополнительныеПараметры.МассивСтрок;
	ПереместитьЗаявкиНаПользователя(МассивСтрок,Значение);
	Оповестить("ЗаписаноИзменениеЗаявки");
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьЗаявку(Команда)
	МассивСтрок = Элементы.ПулЗаявок.ВыделенныеСтроки;
	Если МассивСтрок.Количество() <> 0 Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ОтменитьЗаявкуЗавершение", ЭтотОбъект, Новый Структура("МассивСтрок", МассивСтрок)), "Вы действительно хотите отменить "+МассивСтрок.Количество()+" заявки? ",РежимДиалогаВопрос.ДаНет);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьЗаявкуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	МассивСтрок = ДополнительныеПараметры.МассивСтрок;
		
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ОтменитьЗаявкуСервер(МассивСтрок);
	КонецЕсли;	
КонецПроцедуры


&НаКлиенте
Процедура СодержаниеЗаявкиПулаДокументСформирован(Элемент)
	Пока Элемент.Документ.readyState <> "complete" Цикл
		//Анализируем когда документ загрузится
	КонецЦикла; 
		
	Элемент.Документ.Body.ContentEditable ="false";
	Элемент.Документ.Body.scroll = "yes";
КонецПроцедуры

