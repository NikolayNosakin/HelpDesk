
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИмяПодсистемы = Параметры.ИмяПодсистемы;
	
	Если Параметры.Свойство("Отбор") И ТипЗнч(Параметры.Отбор) = Тип("Структура") тогда
		Если Параметры.Отбор.Свойство("КлючОбъекта") Тогда
			ОтборПоКлючу = Параметры.Отбор.КлючОбъекта;
		КонецЕсли;	
	КонецЕслИ;
	
	Если Не ПустаяСтрока(ИмяПодсистемы) Тогда
		Подсистема = Метаданные.Подсистемы.Найти(ИмяПодсистемы);
		Заголовок = НСтр("ru = 'Все отчеты раздела '") + """" + Подсистема.Синоним + """";
	Иначе
		Заголовок = НСтр("ru = 'Все отчеты'");
	КонецЕсли;
	
	ОбновитьДеревоОтчетов();
	
КонецПроцедуры

&НаСервере
Функция ПодсистемаСодержитОтчет(Подсистема, Отчет)
	
	Если Подсистема.Состав.Содержит(Отчет) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Для каждого Эл Из Подсистема.Подсистемы Цикл
		Если ПодсистемаСодержитОтчет(Эл, Отчет) Тогда
			Возврат Истина;
		КонецЕсли;	
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции
	
&НаСервере
Процедура ОбновитьДеревоОтчетов()
	
	Дерево = РеквизитФормыВЗначение("ДеревоОтчетовИВариантов");
	Дерево.Строки.Очистить();
	
	//
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВариантыОтчетов.Ссылка КАК Ссылка,
	|	ВариантыОтчетов.Наименование КАК Наименование,
	|	ВариантыОтчетов.КлючОбъекта КАК КлючОбъекта,
	|	ВариантыОтчетов.КлючВарианта КАК КлючВарианта,
	|	ВариантыОтчетов.ТипВариантаОтчета КАК ТипВариантаОтчета
	|ИЗ
	|	Справочник.ВариантыОтчетов КАК ВариантыОтчетов
	|ГДЕ
	|	ВариантыОтчетов.ПометкаУдаления = ЛОЖЬ
	|	И (&Ключобъекта = """"
	|			ИЛИ ВариантыОтчетов.КлючОбъекта ПОДОБНО &КлючОбъекта)
	|ИТОГИ ПО
	|	КлючОбъекта";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("КлючОбъекта",СокрЛП(ОтборПоКлючу));
	
	ВыборкаПоОтчетам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоОтчетам.Следующий() Цикл
		
		// Добавляем отчет
		ИмяОтчета = СтрЗаменить(ВыборкаПоОтчетам.КлючОбъекта, "Отчет.", "");
		ОтчетМетаданные = Метаданные.Отчеты.Найти(ИмяОтчета);
		Если ОтчетМетаданные = Неопределено ИЛИ НЕ МожноВключитьОтчетВСписок(ОтчетМетаданные) Тогда
			Продолжить;
		КонецЕсли;
		
		ВетвьОтчет = Дерево.Строки.Добавить();
		ВетвьОтчет.Синоним = ОтчетМетаданные.Представление();
		ВетвьОтчет.Ключ    = ВыборкаПоОтчетам.КлючОбъекта;
		ВетвьОтчет.ИндексКартинки = 0;
		
		// Добавляем варианты 
		ВыборкаПоВариантам = ВыборкаПоОтчетам.Выбрать();
		Пока ВыборкаПоВариантам.Следующий() Цикл
			Строка = ВетвьОтчет.Строки.Добавить();
			Строка.Синоним = ВыборкаПоВариантам.Наименование;
			Строка.Ключ    = ВыборкаПоВариантам.КлючВарианта;
			Строка.Вариант = ВыборкаПоВариантам.Ссылка;
			Если    ВыборкаПоВариантам.ТипВариантаОтчета = Перечисления.ТипыВариантовОтчетов.Предопределенный 
				ИЛИ ВыборкаПоВариантам.ТипВариантаОтчета = Перечисления.ТипыВариантовОтчетов.Отчет Тогда
				// Предопределенные
				Строка.ИндексКартинки = 2;
			Иначе
				// Пользовательские
				Строка.ИндексКартинки = 1;
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	 
	//// Запрос по пользовательским вариантам
	//ПользовательскиеВарианты = Новый Запрос;
	//ПользовательскиеВарианты.Текст = 
	//"ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	ВариантыОтчетов.КлючВарианта,
	//|	ВариантыОтчетов.Наименование,
	//|	ВариантыОтчетов.Ссылка
	//|ИЗ
	//|	Справочник.ВариантыОтчетов КАК ВариантыОтчетов
	//|ГДЕ
	//|	ВариантыОтчетов.КлючОбъекта = &КлючОбъекта
	//|	И ВариантыОтчетов.ПометкаУдаления = ЛОЖЬ
	//|	И ВариантыОтчетов.ТипВариантаОтчета <> &ТипПредопределенный
	//|	И ВариантыОтчетов.ТипВариантаОтчета <> &ТипОтчет";
	//ПользовательскиеВарианты.УстановитьПараметр("ТипПредопределенный", Перечисления.ТипыВариантовОтчетов.Предопределенный);
	//ПользовательскиеВарианты.УстановитьПараметр("ТипОтчет",            Перечисления.ТипыВариантовОтчетов.Отчет);
	//
	//
	//Подсистема = Метаданные.Подсистемы.Найти(ИмяПодсистемы);
	//
	//Дерево = РеквизитФормыВЗначение("ДеревоОтчетовИВариантов");
	//Дерево.Строки.Очистить();
	//
	//Для Каждого Эл из Метаданные.Отчеты Цикл
	//	
	//	Если (ПустаяСтрока(ИмяПодсистемы) ИЛИ ПодсистемаСодержитОтчет(Подсистема, Эл))
	//		И МожноВключитьОтчетВСписок(Эл) Тогда
	//		
	//		Если ПравоДоступа("Использование", Эл) Тогда
	//			
	//			ОтчетМенеджер = Отчеты[Эл.Имя];
	//			Если Эл.ОсновнаяСхемаКомпоновкиДанных = Неопределено Тогда
	//				Продолжить;
	//			КонецЕсли;	
	//			Макет = ОтчетМенеджер.ПолучитьМакет(Эл.ОсновнаяСхемаКомпоновкиДанных.Имя);
	//			
	//			// Добавляем отчет
	//			ВетвьОтчет = Дерево.Строки.Добавить();
	//			ВетвьОтчет.Синоним = Эл.Синоним;
	//			ВетвьОтчет.Ключ = Эл.Имя;
	//			ВетвьОтчет.ИндексКартинки = 0;
	//		
	//			// Добавляем варианты из числа предопределенных в макете 
	//			Для каждого Вариант Из Макет.ВариантыНастроек Цикл
	//				Строка = ВетвьОтчет.Строки.Добавить();
	//				Строка.Синоним = Вариант.Представление;
	//				Строка.Ключ = Вариант.Имя;
	//				Строка.ИндексКартинки = 2;
	//			КонецЦикла;
	//			
	//			// Добавляем пользовательские варианты
	//			ПользовательскиеВарианты.УстановитьПараметр("КлючОбъекта", "Отчет." + Эл.Имя);
	//			
	//			УстановитьПривилегированныйРежим(Истина);
	//			ТаблицаВариантов = ПользовательскиеВарианты.Выполнить().Выгрузить();
	//		 	УстановитьПривилегированныйРежим(Ложь);
	//			
	//			Для Каждого СтрокаТаблицы Из ТаблицаВариантов Цикл
	//				Строка = ВетвьОтчет.Строки.Добавить();
	//				Строка.Синоним = СтрокаТаблицы.Наименование;
	//				Строка.Ключ    = СтрокаТаблицы.КлючВарианта;
	//				Строка.Вариант = СтрокаТаблицы.Ссылка;
	//				Строка.ИндексКартинки = 1;
	//			КонецЦикла;
	//			
	//		КонецЕсли;			
	//		
	//	КонецЕсли;	
	//	
	//КонецЦикла;
	
	ЗначениеВДанныеФормы(Дерево, ДеревоОтчетовИВариантов);
	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьОтчет(Команда)
	
	ВыбратьОтчетВыполнить();
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьДеревоОтчетов();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОтчетовИВариантовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыбратьОтчетВыполнить();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьОтчетВыполнить()
	
	ТекущиеДанные = Элементы.ДеревоОтчетовИВариантов.ТекущиеДанные;
	Если ТекущиеДанные.ПолучитьРодителя() <> Неопределено Тогда
		
		РезультатВыбора = Новый Структура("Отчет, Представление", ТекущиеДанные.Вариант, ТекущиеДанные.Синоним);
		ОповеститьОВыборе(РезультатВыбора);
		
	Иначе 
		
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Выберите какой-либо вариант отчета!'"));
		
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ДеревоОтчетовИВариантовПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоОтчетовИВариантов.ТекущиеДанные; 
	Если ТекущиеДанные = Неопределено Или ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
		Элементы.ДеревоОтчетовИВариантовВыбратьОтчет.Доступность = Ложь;
	Иначе
		Элементы.ДеревоОтчетовИВариантовВыбратьОтчет.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция МожноВключитьОтчетВСписок(Отчет)
	
	УстановитьПривилегированныйРежим(Истина); 
	ОтчетСодержитсяВФункОпции = Ложь;
	Для Каждого ФункОпция Из Метаданные.ФункциональныеОпции Цикл 
		Если ФункОпция.Состав.Содержит(Отчет) Тогда
			Если Метаданные.Константы.Содержит(ФункОпция.Хранение) Тогда
				ОтчетСодержитсяВФункОпции = Истина;
				ЗначениеФункОпции = ПолучитьФункциональнуюОпцию(ФункОпция.Имя);
				Если ТипЗнч(ЗначениеФункОпции) = Тип("Булево") И ЗначениеФункОпции Тогда
					Возврат Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат НЕ ОтчетСодержитсяВФункОпции;	
	
КонецФункции;
