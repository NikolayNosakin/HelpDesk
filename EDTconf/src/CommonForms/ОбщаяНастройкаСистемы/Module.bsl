////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаголовокИзменен = Ложь;
	
	// СтандартныеПодсистемы.БазоваяФункциональность
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		Элементы.ПараметрыАдминистрированияИБ.Видимость = Ложь;
		Элементы.ГруппаВременныхКаталогов.Видимость     = Ложь;
	КонецЕсли;
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
		
	// СтандартныеПодсистемы.РаботаСФайлами
	Элементы.ОткрытьТомаХраненияФайлов.Доступность = НаборКонстант.ХранитьФайлыВТомахНаДиске;
	
	МаксимальныйРазмерФайла = ФайловыеФункции.МаксимальныйРазмерФайла() / (1024*1024);
	// Конец СтандартныеПодсистемы.РаботаСФайлами
	
	Элементы.БизнесПроцессыИЗадачиОбщие.Доступность =  НаборКонстант.ИспользоватьБизнесПроцессыИЗадачи;
	Элементы.БизнесПроцессыИЗадачиЗадание.Доступность = НаборКонстант.ИспользоватьБизнесПроцессыИЗадачи;
	Элементы.БизнесПроцессыИЗадачиГрафики.Доступность = НаборКонстант.ИспользоватьБизнесПроцессыИЗадачи;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьИзменениеКонстант(ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПолнотекстовыйПоиск
	Если ИзмененныеКонстанты.Свойство("ИспользоватьПолнотекстовыйПоиск") Тогда
		
		Если НаборКонстант.ИспользоватьПолнотекстовыйПоиск Тогда
			
			ПолнотекстовыйПоиск.УстановитьРежимПолнотекстовогоПоиска(
				РежимПолнотекстовогоПоиска.Разрешить);
		Иначе
			ПолнотекстовыйПоиск.УстановитьРежимПолнотекстовогоПоиска(
				РежимПолнотекстовогоПоиска.Запретить);
		КонецЕсли;
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПолнотекстовыйПоиск
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.РаботаСФайлами
	МаксимальныйРазмерФайлаМБ = МаксимальныйРазмерФайла * (1024*1024);
	Константы.МаксимальныйРазмерФайла.Установить(МаксимальныйРазмерФайлаМБ);
	// Конец СтандартныеПодсистемы.РаботаСФайлами
		
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОповеститьОбИзмененииКонстант();
	
	Если ЗаголовокИзменен Тогда
		СтандартныеПодсистемыКлиент.УстановитьРасширенныйЗаголовокПриложения();
		ЗаголовокИзменен = Ложь;
	КонецЕсли;

	ОбновитьИнтерфейс();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// Страница ОбщиеПараметры

// СтандартныеПодсистемы.ЗавершениеРаботыПользователей

&НаКлиенте
Процедура ПараметрыАдминистрированияИБ(Команда)
	
	//ОткрытьФорму("ОбщаяФорма.ПараметрыАдминистрированияСервернойИБ");
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ЗавершениеРаботыПользователей

////////////////////////////////////////////////////////////////////////////////
// Страница Классификаторы

// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура ТипХраненияФайловПриИзменении(Элемент)
	
	Элементы.ОткрытьТомаХраненияФайлов.Доступность = НаборКонстант.ХранитьФайлыВТомахНаДиске;
	
	ЕстьТомаХраненияФайлов = СохранитьФормуИПолучитьЕстьТомаХраненияФайлов();
	ОбновитьИнтерфейс();
	
КонецПроцедуры

&НаСервере
Функция СохранитьФормуИПолучитьЕстьТомаХраненияФайлов()
	
	Записать();
	
	Возврат ФайловыеФункции.ЕстьТомаХраненияФайлов();
	
КонецФункции

&НаКлиенте
Процедура ОткрытьТомаХраненияФайлов(Команда)
	
	ОткрытьФорму("Справочник.ТомаХраненияФайлов.ФормаСписка");
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.РаботаСФайлами

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ЗаполнитьИзменениеКонстант(ТекущийОбъект)
	
	ИзмененныеКонстанты = Новый Структура;
	
	Для каждого Элемент Из Элементы Цикл
		Если ТипЗнч(Элемент) <> Тип("ПолеФормы") Тогда
			Продолжить;
		КонецЕсли;
		
		Если ВРег(Лев(Элемент.ПутьКДанным, СтрДлина("НаборКонстант."))) = ВРег("НаборКонстант.") Тогда
			ИмяКонстанты = Сред(Элемент.ПутьКДанным, СтрДлина("НаборКонстант.") + 1);
			
			Если ТипЗнч(ТекущийОбъект[ИмяКонстанты]) <> Тип("ХранилищеЗначения") Тогда
				
				СоставИзменений = Новый Структура;
				СоставИзменений.Вставить("НовоеЗначение",  ТекущийОбъект[ИмяКонстанты]);
				СоставИзменений.Вставить("СтароеЗначение", Константы[ИмяКонстанты].Получить());
				
				Если СоставИзменений.НовоеЗначение <> СоставИзменений.СтароеЗначение Тогда
					ИзмененныеКонстанты.Вставить(ИмяКонстанты, СоставИзменений);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьОбИзмененииКонстант()
	
	Для каждого КлючИЗначение Из ИзмененныеКонстанты Цикл
		Оповестить("Запись_" + КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаголовокСистемыПриИзменении(Элемент)
	ЗаголовокИзменен = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетПоПроектамПриИзменении(Элемент)
	Если НаборКонстант.ВестиУчетПоПроектам Тогда 
		НаборКонстант.ВестиУчетФактическихТрудозатрат = Истина;		
		НаборКонстант.ИспользоватьВидыПроектов = Истина;
	Иначе			
		НаборКонстант.ИспользоватьВидыПроектов = Ложь;
	КонецЕсли;
	УстановитьВидимость();	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьГрафикиРаботыПриИзменении(Элемент)
	Элементы.ОсновнойГрафикРаботы.Видимость = НаборКонстант.ИспользоватьГрафикиРаботы;
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьБизнесПроцессыИЗадачиПриИзменении(Элемент)
	Элементы.БизнесПроцессыИЗадачиОбщие.Доступность =  НаборКонстант.ИспользоватьБизнесПроцессыИЗадачи;
	Элементы.БизнесПроцессыИЗадачиЗадание.Доступность = НаборКонстант.ИспользоватьБизнесПроцессыИЗадачи;
	Элементы.БизнесПроцессыИЗадачиГрафики.Доступность = НаборКонстант.ИспользоватьБизнесПроцессыИЗадачи;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПутьКБазе(Команда)
	НаборКонстант.НавигационнаяСсылкаНаБазу = ПолучитьНавигационнуюСсылкуИнформационнойБазы();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьУчетПоКонтрагентамПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	Элементы.ВестиУчетПоПроектам.Доступность = НаборКонстант.ИспользоватьУчетПоКонтрагентам;
	
	Если НаборКонстант.ВестиУчетПоПроектам Тогда 
		Элементы.ВестиУчетФактическихТрудозатрат.Доступность = Ложь;
		Элементы.ИспользоватьВидыПроектов.Доступность = Истина;
	Иначе	
		Элементы.ВестиУчетФактическихТрудозатрат.Доступность = Истина;
		Элементы.ИспользоватьВидыПроектов.Доступность = Ложь;
	КонецЕсли;
	
	Элементы.ТелеграмКлючAPI.Доступность = НаборКонстант.ИспользоватьТелеграм;

	Элементы.ИспользоватьУчетПоКонтрагентам.Доступность = Не НаборКонстант.ВестиУчетПоПроектам;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимость();
КонецПроцедуры


&НаКлиенте
Процедура ИспользоватьТелеграмПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры

